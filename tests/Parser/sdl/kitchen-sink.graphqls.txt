>  Document
>  >  InputDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated input type of AcceptTopicSuggestion""")
>  >  >  Name
>  >  >  >  token(T_NAME, AcceptTopicSuggestionInput)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The Node ID of the repository.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, repositoryId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The name of the suggested topic.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, name)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated return type of AcceptTopicSuggestion""")
>  >  >  Name
>  >  >  >  token(T_NAME, AcceptTopicSuggestionPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The accepted topic.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, topic)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Topic)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  InterfaceDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """
Represents an object which can take actions on GitHub. Typically a User or Bot.
""")
>  >  >  Name
>  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A URL pointing to the actor's public avatar.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, avatarUrl)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """The size of the resulting square image.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, size)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The username of the actor.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, login)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP path for this actor.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, resourcePath)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP URL for this actor.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, url)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  InputDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated input type of AddComment""")
>  >  >  Name
>  >  >  >  token(T_NAME, AddCommentInput)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The Node ID of the subject to modify.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, subjectId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The contents of the comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, body)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated return type of AddComment""")
>  >  >  Name
>  >  >  >  token(T_NAME, AddCommentPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The edge from the subject's comment connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, commentEdge)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, IssueCommentEdge)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The subject""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, subject)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Node)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The edge from the subject's timeline connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, timelineEdge)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, IssueTimelineItemEdge)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """
Represents a 'added_to_project' event on a given issue or pull request.
""")
>  >  >  Name
>  >  >  >  token(T_NAME, AddedToProjectEvent)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the actor who performed the event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, actor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the primary key from the database.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, databaseId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "Exposed database IDs will eventually be removed in favor of global Relay IDs.")
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  InputDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated input type of AddProjectCard""")
>  >  >  Name
>  >  >  >  token(T_NAME, AddProjectCardInput)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The Node ID of the ProjectColumn.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, projectColumnId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    The content of the card. Must be a member of the ProjectCardItem union
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, contentId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The note on the card.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, note)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated return type of AddProjectCard""")
>  >  >  Name
>  >  >  >  token(T_NAME, AddProjectCardPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The edge from the ProjectColumn's card connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, cardEdge)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ProjectCardEdge)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The ProjectColumn""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, projectColumn)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Project)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  InputDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated input type of AddProjectColumn""")
>  >  >  Name
>  >  >  >  token(T_NAME, AddProjectColumnInput)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The Node ID of the project.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, projectId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The name of the column.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, name)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated return type of AddProjectColumn""")
>  >  >  Name
>  >  >  >  token(T_NAME, AddProjectColumnPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The edge from the project's column connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, columnEdge)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ProjectColumnEdge)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The project""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, project)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Project)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  InputDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated input type of AddPullRequestReviewComment""")
>  >  >  Name
>  >  >  >  token(T_NAME, AddPullRequestReviewCommentInput)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The Node ID of the review to modify.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pullRequestReviewId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The SHA of the commit to comment on.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, commitOID)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, GitObjectID)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The text of the comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, body)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The relative path of the file to comment on.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, path)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The line index in the diff to comment on.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, position)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The comment id to reply to.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, inReplyTo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated return type of AddPullRequestReviewComment""")
>  >  >  Name
>  >  >  >  token(T_NAME, AddPullRequestReviewCommentPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The newly created comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, comment)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PullRequestReviewComment)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The edge from the review's comment connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, commentEdge)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PullRequestReviewCommentEdge)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  InputDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated input type of AddPullRequestReview""")
>  >  >  Name
>  >  >  >  token(T_NAME, AddPullRequestReviewInput)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The Node ID of the pull request to modify.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pullRequestId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The commit OID the review pertains to.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, commitOID)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, GitObjectID)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The contents of the review body comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, body)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The event to perform on the pull request review.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, event)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PullRequestReviewEvent)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The review line comments.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, comments)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, DraftPullRequestReviewComment)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated return type of AddPullRequestReview""")
>  >  >  Name
>  >  >  >  token(T_NAME, AddPullRequestReviewPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The newly created pull request review.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pullRequestReview)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PullRequestReview)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The edge from the pull request's review connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, reviewEdge)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PullRequestReviewEdge)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  InputDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated input type of AddReaction""")
>  >  >  Name
>  >  >  >  token(T_NAME, AddReactionInput)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The Node ID of the subject to modify.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, subjectId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The name of the emoji to react with.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, content)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ReactionContent)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated return type of AddReaction""")
>  >  >  Name
>  >  >  >  token(T_NAME, AddReactionPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The reaction object.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, reaction)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Reaction)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The reactable subject.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, subject)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Reactable)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  InputDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated input type of AddStar""")
>  >  >  Name
>  >  >  >  token(T_NAME, AddStarInput)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The Starrable ID to star.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, starrableId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated return type of AddStar""")
>  >  >  Name
>  >  >  >  token(T_NAME, AddStarPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The starrable.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, starrable)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Starrable)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  InterfaceDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An object that can have users assigned to it.""")
>  >  >  Name
>  >  >  >  token(T_NAME, Assignable)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of Users assigned to this object.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, assignees)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, UserConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents an 'assigned' event on any assignable object.""")
>  >  >  Name
>  >  >  >  token(T_NAME, AssignedEvent)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the actor who performed the event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, actor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the assignable associated with the event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, assignable)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Assignable)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the user who was assigned.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, user)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, User)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """
Represents a 'base_ref_changed' event on a given issue or pull request.
""")
>  >  >  Name
>  >  >  >  token(T_NAME, BaseRefChangedEvent)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the actor who performed the event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, actor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the primary key from the database.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, databaseId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "Exposed database IDs will eventually be removed in favor of global Relay IDs.")
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents a 'base_ref_force_pushed' event on a given pull request.""")
>  >  >  Name
>  >  >  >  token(T_NAME, BaseRefForcePushedEvent)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the actor who performed the event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, actor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Identifies the after commit SHA for the 'base_ref_force_pushed' event.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, afterCommit)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Commit)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Identifies the before commit SHA for the 'base_ref_force_pushed' event.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, beforeCommit)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Commit)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """PullRequest referenced by event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pullRequest)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PullRequest)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Identifies the fully qualified ref name for the 'base_ref_force_pushed' event.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, ref)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Ref)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents a Git blame.""")
>  >  >  Name
>  >  >  >  token(T_NAME, Blame)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The list of ranges from a Git blame.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, ranges)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, BlameRange)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents a range of information from a Git blame.""")
>  >  >  Name
>  >  >  >  token(T_NAME, BlameRange)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Identifies the recency of the change, from 1 (new) to 10 (old). This is
    calculated as a 2-quantile and determines the length of distance between the
    median age of all the changes in the file and the recency of the current
    range's change.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, age)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the line author""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, commit)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Commit)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The ending line for the range""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, endingLine)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The starting line for the range""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, startingLine)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents a Git blob.""")
>  >  >  Name
>  >  >  >  token(T_NAME, Blob)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, GitObject)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """An abbreviated version of the Git object ID""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, abbreviatedOid)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Byte size of Blob object""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, byteSize)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP path for this Git object""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, commitResourcePath)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP URL for this Git object""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, commitUrl)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Indicates whether the Blob is binary or text""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, isBinary)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Indicates whether the contents is truncated""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, isTruncated)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The Git object ID""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, oid)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, GitObjectID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The Repository the Git object belongs to""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, repository)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Repository)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """UTF8 text data or null if the Blob is binary""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, text)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """A special type of user which takes actions on behalf of GitHub Apps.""")
>  >  >  Name
>  >  >  >  token(T_NAME, Bot)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A URL pointing to the GitHub App's public avatar.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, avatarUrl)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """The size of the resulting square image.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, size)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the primary key from the database.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, databaseId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "Exposed database IDs will eventually be removed in favor of global Relay IDs.")
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The username of the actor.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, login)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP path for this bot""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, resourcePath)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was last updated.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, updatedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "General type updated timestamps will eventually be replaced by other field specific timestamps.")
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP URL for this bot""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, url)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  InterfaceDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An object that can be closed""")
>  >  >  Name
>  >  >  >  token(T_NAME, Closable)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    `true` if the object is closed (definition of closed may depend on type)
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, closed)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was closed.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, closedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents a 'closed' event on any `Closable`.""")
>  >  >  Name
>  >  >  >  token(T_NAME, ClosedEvent)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the actor who performed the event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, actor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Object that was closed.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, closable)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Closable)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the commit associated with the 'closed' event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, commit)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Commit)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The Code of Conduct for a repository""")
>  >  >  Name
>  >  >  >  token(T_NAME, CodeOfConduct)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The body of the CoC""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, body)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The key for the CoC""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, key)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The formal name of the CoC""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, name)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The path to the CoC""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, url)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  EnumDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Collaborators affiliation level with a repository.""")
>  >  >  Name
>  >  >  >  token(T_NAME, CollaboratorAffiliation)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """All outside collaborators of an organization-owned repository.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, OUTSIDE)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    All collaborators with permissions to an organization-owned repository, regardless of organization membership status.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, DIRECT)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """All collaborators the authenticated user can see.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, ALL)
>  >  InterfaceDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents a comment.""")
>  >  >  Name
>  >  >  >  token(T_NAME, Comment)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The actor who authored the comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, author)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Author's association with the subject of the comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, authorAssociation)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, CommentAuthorAssociation)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The comment body as Markdown.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, body)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The comment body rendered to HTML.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, bodyHTML)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, HTML)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Check if this comment was created via an email reply.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdViaEmail)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The actor who edited the comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, editor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The moment the editor made the last edit""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, lastEditedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies when the comment was published at.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, publishedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was last updated.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, updatedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "General type updated timestamps will eventually be replaced by other field specific timestamps.")
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Did the viewer author this comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerDidAuthor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  EnumDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """A comment author association with repository.""")
>  >  >  Name
>  >  >  >  token(T_NAME, CommentAuthorAssociation)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Author is a member of the organization that owns the repository.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, MEMBER)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Author is the owner of the repository.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, OWNER)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Author has been invited to collaborate on the repository.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, COLLABORATOR)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Author has previously committed to the repository.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, CONTRIBUTOR)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Author has not previously committed to the repository.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, FIRST_TIME_CONTRIBUTOR)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Author has not previously committed to GitHub.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, FIRST_TIMER)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Author has no association with the repository.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, NONE)
>  >  EnumDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The possible errors that will prevent a user from updating a comment.""")
>  >  >  Name
>  >  >  >  token(T_NAME, CommentCannotUpdateReason)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    You must be the author or have write access to this repository to update this comment.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, INSUFFICIENT_ACCESS)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Unable to create comment because issue is locked.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, LOCKED)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """You must be logged in to update this comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, LOGIN_REQUIRED)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Repository is under maintenance.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, MAINTENANCE)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """At least one email address must be verified to update this comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, VERIFIED_EMAIL_REQUIRED)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """
Represents a 'comment_deleted' event on a given issue or pull request.
""")
>  >  >  Name
>  >  >  >  token(T_NAME, CommentDeletedEvent)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the actor who performed the event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, actor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the primary key from the database.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, databaseId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "Exposed database IDs will eventually be removed in favor of global Relay IDs.")
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents a Git commit.""")
>  >  >  Name
>  >  >  >  token(T_NAME, Commit)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, GitObject)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """An abbreviated version of the Git object ID""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, abbreviatedOid)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The number of additions in this commit.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, additions)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Authorship details of the commit.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, author)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, GitActor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Check if the committer and the author match.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, authoredByCommitter)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The datetime when this commit was authored.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, authoredDate)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Fetches `git blame` information.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, blame)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """The file whose Git blame information you want.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, path)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Blame)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The number of changed files in this commit.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, changedFiles)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Comments made on the commit.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, comments)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, CommitCommentConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP path for this Git object""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, commitResourcePath)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP URL for this Git object""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, commitUrl)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The datetime when this commit was committed.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, committedDate)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Check if commited via GitHub web UI.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, committedViaWeb)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Committership details of the commit.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, committer)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, GitActor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The number of deletions in this commit.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, deletions)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    The linear commit history starting from (and including) this commit, in the same order as `git log`.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, history)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        If non-null, filters history to only show commits touching files under this path.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, path)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        If non-null, filters history to only show commits with matching authorship.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, author)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, CommitAuthor)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Allows specifying a beginning time or date for fetching commits.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, since)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, GitTimestamp)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Allows specifying an ending time or date for fetching commits.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, until)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, GitTimestamp)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, CommitHistoryConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The Git commit message""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, message)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The Git commit message body""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, messageBody)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The commit message body rendered to HTML.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, messageBodyHTML)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, HTML)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The Git commit message headline""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, messageHeadline)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The commit message headline rendered to HTML.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, messageHeadlineHTML)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, HTML)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The Git object ID""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, oid)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, GitObjectID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The parents of a commit.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, parents)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, CommitConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The datetime when this commit was pushed.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pushedDate)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The Repository this commit belongs to""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, repository)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Repository)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP path for this commit""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, resourcePath)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Commit signing information, if present.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, signature)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, GitSignature)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Status information for this commit""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, status)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Status)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Returns a URL to download a tarball archive for a repository.
    Note: For private repositories, these links are temporary and expire after five minutes.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, tarballUrl)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Commit's root Tree""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, tree)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Tree)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP path for the tree of this commit""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, treeResourcePath)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP URL for the tree of this commit""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, treeUrl)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP URL for this commit""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, url)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Check if the viewer is able to change their subscription status for the repository.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCanSubscribe)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerSubscription)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, SubscriptionState)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Returns a URL to download a zipball archive for a repository.
    Note: For private repositories, these links are temporary and expire after five minutes.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, zipballUrl)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  InputDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Specifies an author for filtering Git commits.""")
>  >  >  Name
>  >  >  >  token(T_NAME, CommitAuthor)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    ID of a User to filter by. If non-null, only commits authored by this user
    will be returned. This field takes precedence over emails.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Email addresses to filter by. Commits authored by any of the specified email addresses will be returned.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, emails)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents a comment on a given Commit.""")
>  >  >  Name
>  >  >  >  token(T_NAME, CommitComment)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Comment)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The actor who authored the comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, author)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Author's association with the subject of the comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, authorAssociation)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, CommentAuthorAssociation)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the comment body.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, body)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the comment body rendered to HTML.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, bodyHTML)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, HTML)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Identifies the commit associated with the comment, if the commit exists.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, commit)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Commit)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Check if this comment was created via an email reply.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdViaEmail)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the primary key from the database.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, databaseId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "Exposed database IDs will eventually be removed in favor of global Relay IDs.")
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The actor who edited the comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, editor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The moment the editor made the last edit""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, lastEditedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the file path associated with the comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, path)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the line position associated with the comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, position)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies when the comment was published at.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, publishedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of reactions grouped by content left on the subject.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, reactionGroups)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, ReactionGroup)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of Reactions left on the Issue.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, reactions)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Allows filtering Reactions by emoji.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, content)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, ReactionContent)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Allows specifying the order in which reactions are returned.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, orderBy)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, ReactionOrder)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ReactionConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The repository associated with this node.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, repository)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Repository)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP path permalink for this commit comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, resourcePath)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was last updated.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, updatedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "General type updated timestamps will eventually be replaced by other field specific timestamps.")
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP URL permalink for this commit comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, url)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Check if the current viewer can delete this object.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCanDelete)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Can user react to this subject""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCanReact)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Check if the current viewer can update this object.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCanUpdate)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Reasons why the current viewer can not update this comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCannotUpdateReasons)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, CommentCannotUpdateReason)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Did the viewer author this comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerDidAuthor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The connection type for CommitComment.""")
>  >  >  Name
>  >  >  >  token(T_NAME, CommitCommentConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of edges.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, edges)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, CommitCommentEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of nodes.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nodes)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, CommitComment)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Information to aid in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pageInfo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PageInfo)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the total count of items in the connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, totalCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An edge in a connection.""")
>  >  >  Name
>  >  >  >  token(T_NAME, CommitCommentEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A cursor for use in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, cursor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The item at the end of the edge.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, node)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, CommitComment)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """A thread of comments on a commit.""")
>  >  >  Name
>  >  >  >  token(T_NAME, CommitCommentThread)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, RepositoryNode)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The comments that exist in this thread.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, comments)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, CommitCommentConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The commit the comments were made on.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, commit)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Commit)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The file the comments were made on.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, path)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The position in the diff for the commit that the comment was made on.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, position)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The repository associated with this node.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, repository)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Repository)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The connection type for Commit.""")
>  >  >  Name
>  >  >  >  token(T_NAME, CommitConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of edges.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, edges)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, CommitEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of nodes.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nodes)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Commit)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Information to aid in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pageInfo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PageInfo)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the total count of items in the connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, totalCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An edge in a connection.""")
>  >  >  Name
>  >  >  >  token(T_NAME, CommitEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A cursor for use in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, cursor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The item at the end of the edge.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, node)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Commit)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The connection type for Commit.""")
>  >  >  Name
>  >  >  >  token(T_NAME, CommitHistoryConnection)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, edges)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, CommitEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of nodes.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nodes)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Commit)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Information to aid in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pageInfo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PageInfo)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the total count of items in the connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, totalCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """
Represents a 'converted_note_to_issue' event on a given issue or pull request.
""")
>  >  >  Name
>  >  >  >  token(T_NAME, ConvertedNoteToIssueEvent)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the actor who performed the event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, actor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the primary key from the database.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, databaseId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "Exposed database IDs will eventually be removed in favor of global Relay IDs.")
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  InputDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated input type of CreateProject""")
>  >  >  Name
>  >  >  >  token(T_NAME, CreateProjectInput)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The owner ID to create the project under.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, ownerId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The name of project.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, name)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The description of project.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, body)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated return type of CreateProject""")
>  >  >  Name
>  >  >  >  token(T_NAME, CreateProjectPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The new project.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, project)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Project)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents a mention made by one issue or pull request to another.""")
>  >  >  Name
>  >  >  >  token(T_NAME, CrossReferencedEvent)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, UniformResourceLocatable)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the actor who performed the event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, actor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Reference originated in a different repository.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, isCrossRepository)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies when the reference was made.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, referencedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP path for this pull request.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, resourcePath)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Issue or pull request that made the reference.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, source)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ReferencedSubject)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Issue or pull request to which the reference was made.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, target)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ReferencedSubject)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP URL for this pull request.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, url)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Checks if the target will be closed when the source is merged.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, willCloseTarget)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ScalarDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An ISO-8601 encoded date string.""")
>  >  >  Name
>  >  >  >  token(T_NAME, Date)
>  >  ScalarDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An ISO-8601 encoded UTC date string.""")
>  >  >  Name
>  >  >  >  token(T_NAME, DateTime)
>  >  InputDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated input type of DeclineTopicSuggestion""")
>  >  >  Name
>  >  >  >  token(T_NAME, DeclineTopicSuggestionInput)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The Node ID of the repository.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, repositoryId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The name of the suggested topic.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, name)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The reason why the suggested topic is declined.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, reason)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, TopicSuggestionDeclineReason)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated return type of DeclineTopicSuggestion""")
>  >  >  Name
>  >  >  >  token(T_NAME, DeclineTopicSuggestionPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The declined topic.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, topic)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Topic)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  EnumDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The possible default permissions for organization-owned repositories.""")
>  >  >  Name
>  >  >  >  token(T_NAME, DefaultRepositoryPermissionField)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Members have read access to org repos by default""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, READ)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Members have read and write access to org repos by default""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, WRITE)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Members have read, write, and admin access to org repos by default""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, ADMIN)
>  >  InterfaceDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Entities that can be deleted.""")
>  >  >  Name
>  >  >  >  token(T_NAME, Deletable)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Check if the current viewer can delete this object.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCanDelete)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  InputDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated input type of DeleteProjectCard""")
>  >  >  Name
>  >  >  >  token(T_NAME, DeleteProjectCardInput)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The id of the card to delete.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, cardId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated return type of DeleteProjectCard""")
>  >  >  Name
>  >  >  >  token(T_NAME, DeleteProjectCardPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The column the deleted card was in.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, column)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ProjectColumn)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The deleted card ID.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, deletedCardId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  InputDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated input type of DeleteProjectColumn""")
>  >  >  Name
>  >  >  >  token(T_NAME, DeleteProjectColumnInput)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The id of the column to delete.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, columnId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated return type of DeleteProjectColumn""")
>  >  >  Name
>  >  >  >  token(T_NAME, DeleteProjectColumnPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The deleted column ID.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, deletedColumnId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The project the deleted column was in.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, project)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Project)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  InputDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated input type of DeleteProject""")
>  >  >  Name
>  >  >  >  token(T_NAME, DeleteProjectInput)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The Project ID to update.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, projectId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated return type of DeleteProject""")
>  >  >  Name
>  >  >  >  token(T_NAME, DeleteProjectPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The repository or organization the project was removed from.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, owner)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ProjectOwner)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  InputDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated input type of DeletePullRequestReview""")
>  >  >  Name
>  >  >  >  token(T_NAME, DeletePullRequestReviewInput)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The Node ID of the pull request review to delete.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pullRequestReviewId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated return type of DeletePullRequestReview""")
>  >  >  Name
>  >  >  >  token(T_NAME, DeletePullRequestReviewPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The deleted pull request review.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pullRequestReview)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PullRequestReview)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents a 'demilestoned' event on a given issue or pull request.""")
>  >  >  Name
>  >  >  >  token(T_NAME, DemilestonedEvent)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the actor who performed the event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, actor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Identifies the milestone title associated with the 'demilestoned' event.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, milestoneTitle)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Object referenced by event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, subject)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, MilestoneItem)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents a 'deployed' event on a given pull request.""")
>  >  >  Name
>  >  >  >  token(T_NAME, DeployedEvent)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the actor who performed the event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, actor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the primary key from the database.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, databaseId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "Exposed database IDs will eventually be removed in favor of global Relay IDs.")
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The deployment associated with the 'deployed' event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, deployment)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Deployment)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """PullRequest referenced by event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pullRequest)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PullRequest)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The ref associated with the 'deployed' event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, ref)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Ref)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """A repository deploy key.""")
>  >  >  Name
>  >  >  >  token(T_NAME, DeployKey)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The deploy key.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, key)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Whether or not the deploy key is read only.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, readOnly)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The deploy key title.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, title)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Whether or not the deploy key has been verified.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, verified)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The connection type for DeployKey.""")
>  >  >  Name
>  >  >  >  token(T_NAME, DeployKeyConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of edges.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, edges)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, DeployKeyEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of nodes.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nodes)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, DeployKey)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Information to aid in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pageInfo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PageInfo)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the total count of items in the connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, totalCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An edge in a connection.""")
>  >  >  Name
>  >  >  >  token(T_NAME, DeployKeyEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A cursor for use in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, cursor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The item at the end of the edge.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, node)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DeployKey)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents triggered deployment instance.""")
>  >  >  Name
>  >  >  >  token(T_NAME, Deployment)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the commit sha of the deployment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, commit)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Commit)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the actor who triggered the deployment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, creator)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the primary key from the database.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, databaseId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "Exposed database IDs will eventually be removed in favor of global Relay IDs.")
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The environment to which this deployment was made.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, environment)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The latest status of this deployment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, latestStatus)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DeploymentStatus)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Extra information that a deployment system might need.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, payload)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the repository associated with the deployment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, repository)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Repository)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The current state of the deployment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, state)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DeploymentState)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of statuses associated with the deployment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, statuses)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DeploymentStatusConnection)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The connection type for Deployment.""")
>  >  >  Name
>  >  >  >  token(T_NAME, DeploymentConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of edges.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, edges)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, DeploymentEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of nodes.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nodes)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Deployment)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Information to aid in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pageInfo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PageInfo)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the total count of items in the connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, totalCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An edge in a connection.""")
>  >  >  Name
>  >  >  >  token(T_NAME, DeploymentEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A cursor for use in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, cursor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The item at the end of the edge.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, node)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Deployment)
>  >  EnumDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The possible states in which a deployment can be.""")
>  >  >  Name
>  >  >  >  token(T_NAME, DeploymentState)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The pending deployment was not updated after 30 minutes.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, ABANDONED)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The deployment is currently active.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, ACTIVE)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """An inactive transient deployment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, DESTROYED)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The deployment experienced an error.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, ERROR)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The deployment has failed.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, FAILURE)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The deployment is inactive.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, INACTIVE)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The deployment is pending.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, PENDING)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Describes the status of a given deployment attempt.""")
>  >  >  Name
>  >  >  >  token(T_NAME, DeploymentStatus)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the actor who triggered the deployment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, creator)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the deployment associated with status.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, deployment)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Deployment)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the description of the deployment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, description)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the environment URL of the deployment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, environmentUrl)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the log URL of the deployment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, logUrl)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the current state of the deployment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, state)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DeploymentStatusState)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was last updated.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, updatedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "General type updated timestamps will eventually be replaced by other field specific timestamps.")
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The connection type for DeploymentStatus.""")
>  >  >  Name
>  >  >  >  token(T_NAME, DeploymentStatusConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of edges.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, edges)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, DeploymentStatusEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of nodes.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nodes)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, DeploymentStatus)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Information to aid in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pageInfo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PageInfo)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the total count of items in the connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, totalCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An edge in a connection.""")
>  >  >  Name
>  >  >  >  token(T_NAME, DeploymentStatusEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A cursor for use in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, cursor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The item at the end of the edge.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, node)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DeploymentStatus)
>  >  EnumDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The possible states for a deployment status.""")
>  >  >  Name
>  >  >  >  token(T_NAME, DeploymentStatusState)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The deployment is pending.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, PENDING)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The deployment was successful.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, SUCCESS)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The deployment has failed.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, FAILURE)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The deployment is inactive.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, INACTIVE)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The deployment experienced an error.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, ERROR)
>  >  InputDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated input type of DismissPullRequestReview""")
>  >  >  Name
>  >  >  >  token(T_NAME, DismissPullRequestReviewInput)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The Node ID of the pull request review to modify.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pullRequestReviewId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The contents of the pull request review dismissal message.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, message)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated return type of DismissPullRequestReview""")
>  >  >  Name
>  >  >  >  token(T_NAME, DismissPullRequestReviewPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The dismissed pull request review.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pullRequestReview)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PullRequestReview)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  InputDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Specifies a review comment to be left with a Pull Request Review.""")
>  >  >  Name
>  >  >  >  token(T_NAME, DraftPullRequestReviewComment)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Path to the file being commented on.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, path)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Position in the file to leave a comment on.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, position)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Body of the comment to leave.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, body)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An external identity provisioned by SAML SSO or SCIM.""")
>  >  >  Name
>  >  >  >  token(T_NAME, ExternalIdentity)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The GUID for this identity""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, guid)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Organization invitation for this SCIM-provisioned external identity""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, organizationInvitation)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, OrganizationInvitation)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """SAML Identity attributes""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, samlIdentity)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ExternalIdentitySamlAttributes)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """SCIM Identity attributes""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, scimIdentity)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ExternalIdentityScimAttributes)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """User linked to this external identity""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, user)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, User)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The connection type for ExternalIdentity.""")
>  >  >  Name
>  >  >  >  token(T_NAME, ExternalIdentityConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of edges.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, edges)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, ExternalIdentityEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of nodes.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nodes)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, ExternalIdentity)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Information to aid in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pageInfo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PageInfo)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the total count of items in the connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, totalCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An edge in a connection.""")
>  >  >  Name
>  >  >  >  token(T_NAME, ExternalIdentityEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A cursor for use in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, cursor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The item at the end of the edge.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, node)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ExternalIdentity)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """SAML attributes for the External Identity""")
>  >  >  Name
>  >  >  >  token(T_NAME, ExternalIdentitySamlAttributes)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The NameID of the SAML identity""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nameId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """SCIM attributes for the External Identity""")
>  >  >  Name
>  >  >  >  token(T_NAME, ExternalIdentityScimAttributes)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The userName of the SCIM identity""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, username)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The connection type for User.""")
>  >  >  Name
>  >  >  >  token(T_NAME, FollowerConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of edges.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, edges)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, UserEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of nodes.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nodes)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, User)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Information to aid in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pageInfo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PageInfo)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the total count of items in the connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, totalCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The connection type for User.""")
>  >  >  Name
>  >  >  >  token(T_NAME, FollowingConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of edges.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, edges)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, UserEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of nodes.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nodes)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, User)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Information to aid in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pageInfo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PageInfo)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the total count of items in the connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, totalCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """A Gist.""")
>  >  >  Name
>  >  >  >  token(T_NAME, Gist)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Starrable)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of comments associated with the gist""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, comments)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, GistCommentConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The gist description.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, description)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Whether the gist is public or not.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, isPublic)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The gist name.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, name)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The gist owner.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, owner)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, RepositoryOwner)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies when the gist was last pushed to.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pushedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of users who have starred this starrable.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, stargazers)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Order for connection""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, orderBy)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, StarOrder)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, StargazerConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was last updated.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, updatedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "General type updated timestamps will eventually be replaced by other field specific timestamps.")
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Returns a boolean indicating whether the viewing user has starred this starrable.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerHasStarred)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents a comment on an Gist.""")
>  >  >  Name
>  >  >  >  token(T_NAME, GistComment)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Comment)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The actor who authored the comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, author)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Author's association with the gist.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, authorAssociation)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, CommentAuthorAssociation)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the comment body.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, body)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The comment body rendered to HTML.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, bodyHTML)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, HTML)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Check if this comment was created via an email reply.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdViaEmail)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The actor who edited the comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, editor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The associated gist.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, gist)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Gist)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The moment the editor made the last edit""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, lastEditedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies when the comment was published at.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, publishedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was last updated.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, updatedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "General type updated timestamps will eventually be replaced by other field specific timestamps.")
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Check if the current viewer can delete this object.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCanDelete)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Check if the current viewer can update this object.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCanUpdate)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Reasons why the current viewer can not update this comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCannotUpdateReasons)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, CommentCannotUpdateReason)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Did the viewer author this comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerDidAuthor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The connection type for GistComment.""")
>  >  >  Name
>  >  >  >  token(T_NAME, GistCommentConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of edges.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, edges)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, GistCommentEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of nodes.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nodes)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, GistComment)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Information to aid in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pageInfo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PageInfo)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the total count of items in the connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, totalCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An edge in a connection.""")
>  >  >  Name
>  >  >  >  token(T_NAME, GistCommentEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A cursor for use in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, cursor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The item at the end of the edge.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, node)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, GistComment)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The connection type for Gist.""")
>  >  >  Name
>  >  >  >  token(T_NAME, GistConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of edges.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, edges)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, GistEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of nodes.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nodes)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Gist)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Information to aid in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pageInfo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PageInfo)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the total count of items in the connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, totalCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An edge in a connection.""")
>  >  >  Name
>  >  >  >  token(T_NAME, GistEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A cursor for use in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, cursor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The item at the end of the edge.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, node)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Gist)
>  >  InputDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Ordering options for gist connections""")
>  >  >  Name
>  >  >  >  token(T_NAME, GistOrder)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The field to order repositories by.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, field)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, GistOrderField)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The ordering direction.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, direction)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, OrderDirection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  EnumDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Properties by which gist connections can be ordered.""")
>  >  >  Name
>  >  >  >  token(T_NAME, GistOrderField)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Order gists by creation time""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, CREATED_AT)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Order gists by update time""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, UPDATED_AT)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Order gists by push time""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, PUSHED_AT)
>  >  EnumDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The privacy of a Gist""")
>  >  >  Name
>  >  >  >  token(T_NAME, GistPrivacy)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Public""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, PUBLIC)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Secret""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, SECRET)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Gists that are public and secret""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, ALL)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents an actor in a Git commit (ie. an author or committer).""")
>  >  >  Name
>  >  >  >  token(T_NAME, GitActor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A URL pointing to the author's public avatar.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, avatarUrl)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """The size of the resulting square image.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, size)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The timestamp of the Git action (authoring or committing).""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, date)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, GitTimestamp)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The email in the Git commit.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, email)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The name in the Git commit.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, name)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    The GitHub user corresponding to the email field. Null if no such user exists.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, user)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, User)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents information about the GitHub instance.""")
>  >  >  Name
>  >  >  >  token(T_NAME, GitHubMetadata)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Returns a String that's a SHA of `github-services`""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, gitHubServicesSha)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """IP addresses that users connect to for git operations""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, gitIpAddresses)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """IP addresses that service hooks are sent from""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, hookIpAddresses)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """IP addresses that the importer connects from""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, importerIpAddresses)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Whether or not users are verified""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, isPasswordAuthenticationVerifiable)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """IP addresses for GitHub Pages' A records""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pagesIpAddresses)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  InterfaceDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents a Git object.""")
>  >  >  Name
>  >  >  >  token(T_NAME, GitObject)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """An abbreviated version of the Git object ID""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, abbreviatedOid)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP path for this Git object""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, commitResourcePath)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP URL for this Git object""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, commitUrl)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The Git object ID""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, oid)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, GitObjectID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The Repository the Git object belongs to""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, repository)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Repository)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ScalarDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """A Git object ID.""")
>  >  >  Name
>  >  >  >  token(T_NAME, GitObjectID)
>  >  InterfaceDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Information about a signature (GPG or S/MIME) on a Commit or Tag.""")
>  >  >  Name
>  >  >  >  token(T_NAME, GitSignature)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Email used to sign this object.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, email)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """True if the signature is valid and verified by GitHub.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, isValid)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Payload for GPG signing object. Raw ODB object without the signature header.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, payload)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """ASCII-armored signature header from object.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, signature)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """GitHub user corresponding to the email signing this commit.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, signer)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, User)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    The state of this signature. `VALID` if signature is valid and verified by
    GitHub, otherwise represents reason why signature is considered invalid.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, state)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, GitSignatureState)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  EnumDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The state of a Git signature.""")
>  >  >  Name
>  >  >  >  token(T_NAME, GitSignatureState)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Valid signature and verified by GitHub.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, VALID)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Invalid signature.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, INVALID)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Malformed signature.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, MALFORMED_SIG)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Key used for signing not known to GitHub.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, UNKNOWN_KEY)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Invalid email used for signing.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, BAD_EMAIL)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Email used for signing unverified on GitHub.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, UNVERIFIED_EMAIL)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Email used for signing not known to GitHub.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, NO_USER)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Unknown signature type.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, UNKNOWN_SIG_TYPE)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Unsigned.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, UNSIGNED)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Internal error - the GPG verification service is unavailable at the moment.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, GPGVERIFY_UNAVAILABLE)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Internal error - the GPG verification service misbehaved.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, GPGVERIFY_ERROR)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The usage flags for the key that signed this don't allow signing.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, NOT_SIGNING_KEY)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Signing key expired.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, EXPIRED_KEY)
>  >  ScalarDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Git SSH string""")
>  >  >  Name
>  >  >  >  token(T_NAME, GitSSHRemote)
>  >  ScalarDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """
An ISO-8601 encoded date string. Unlike the DateTime type, GitTimestamp is not converted in UTC.
""")
>  >  >  Name
>  >  >  >  token(T_NAME, GitTimestamp)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents a GPG signature on a Commit or Tag.""")
>  >  >  Name
>  >  >  >  token(T_NAME, GpgSignature)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, GitSignature)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Email used to sign this object.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, email)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """True if the signature is valid and verified by GitHub.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, isValid)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Hex-encoded ID of the key that signed this object.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, keyId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Payload for GPG signing object. Raw ODB object without the signature header.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, payload)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """ASCII-armored signature header from object.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, signature)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """GitHub user corresponding to the email signing this commit.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, signer)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, User)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    The state of this signature. `VALID` if signature is valid and verified by
    GitHub, otherwise represents reason why signature is considered invalid.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, state)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, GitSignatureState)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents a 'head_ref_deleted' event on a given pull request.""")
>  >  >  Name
>  >  >  >  token(T_NAME, HeadRefDeletedEvent)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the actor who performed the event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, actor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the Ref associated with the `head_ref_deleted` event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, headRef)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Ref)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Identifies the name of the Ref associated with the `head_ref_deleted` event.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, headRefName)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """PullRequest referenced by event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pullRequest)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PullRequest)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents a 'head_ref_force_pushed' event on a given pull request.""")
>  >  >  Name
>  >  >  >  token(T_NAME, HeadRefForcePushedEvent)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the actor who performed the event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, actor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Identifies the after commit SHA for the 'head_ref_force_pushed' event.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, afterCommit)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Commit)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Identifies the before commit SHA for the 'head_ref_force_pushed' event.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, beforeCommit)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Commit)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """PullRequest referenced by event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pullRequest)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PullRequest)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Identifies the fully qualified ref name for the 'head_ref_force_pushed' event.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, ref)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Ref)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents a 'head_ref_restored' event on a given pull request.""")
>  >  >  Name
>  >  >  >  token(T_NAME, HeadRefRestoredEvent)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the actor who performed the event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, actor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """PullRequest referenced by event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pullRequest)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PullRequest)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ScalarDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """A string containing HTML code.""")
>  >  >  Name
>  >  >  >  token(T_NAME, HTML)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """
An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.
""")
>  >  >  Name
>  >  >  >  token(T_NAME, Issue)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Assignable)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of Users assigned to this object.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, assignees)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, UserConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The actor who authored the comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, author)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Author's association with the subject of the comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, authorAssociation)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, CommentAuthorAssociation)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the body of the issue.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, body)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the body of the issue rendered to HTML.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, bodyHTML)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, HTML)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the body of the issue rendered to text.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, bodyText)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    `true` if the object is closed (definition of closed may depend on type)
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, closed)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was closed.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, closedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of comments associated with the Issue.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, comments)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, IssueCommentConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Check if this comment was created via an email reply.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdViaEmail)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the primary key from the database.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, databaseId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "Exposed database IDs will eventually be removed in favor of global Relay IDs.")
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The actor who edited the comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, editor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of labels associated with the object.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, labels)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, LabelConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The moment the editor made the last edit""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, lastEditedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """`true` if the object is locked""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, locked)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the milestone associated with the issue.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, milestone)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Milestone)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the issue number.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, number)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of Users that are participating in the Issue conversation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, participants)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, UserConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """List of project cards associated with this issue.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, projectCards)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ProjectCardConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies when the comment was published at.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, publishedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of reactions grouped by content left on the subject.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, reactionGroups)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, ReactionGroup)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of Reactions left on the Issue.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, reactions)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Allows filtering Reactions by emoji.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, content)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, ReactionContent)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Allows specifying the order in which reactions are returned.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, orderBy)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, ReactionOrder)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ReactionConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The repository associated with this node.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, repository)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Repository)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP path for this issue""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, resourcePath)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the state of the issue.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, state)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, IssueState)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of events, comments, commits, etc. associated with the issue.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, timeline)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Allows filtering timeline events by a `since` timestamp.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, since)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, IssueTimelineConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the issue title.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, title)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was last updated.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, updatedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "General type updated timestamps will eventually be replaced by other field specific timestamps.")
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP URL for this issue""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, url)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Can user react to this subject""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCanReact)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Check if the viewer is able to change their subscription status for the repository.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCanSubscribe)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Check if the current viewer can update this object.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCanUpdate)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Reasons why the current viewer can not update this comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCannotUpdateReasons)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, CommentCannotUpdateReason)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Did the viewer author this comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerDidAuthor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerSubscription)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, SubscriptionState)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents a comment on an Issue.""")
>  >  >  Name
>  >  >  >  token(T_NAME, IssueComment)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Comment)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The actor who authored the comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, author)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Author's association with the subject of the comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, authorAssociation)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, CommentAuthorAssociation)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the comment body.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, body)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The comment body rendered to HTML.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, bodyHTML)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, HTML)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the body of the issue rendered to text.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, bodyText)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Check if this comment was created via an email reply.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdViaEmail)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the primary key from the database.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, databaseId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "Exposed database IDs will eventually be removed in favor of global Relay IDs.")
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The actor who edited the comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, editor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the issue associated with the comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, issue)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Issue)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The moment the editor made the last edit""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, lastEditedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies when the comment was published at.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, publishedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Returns the pull request associated with the comment, if this comment was made on a
    pull request.

    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pullRequest)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PullRequest)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of reactions grouped by content left on the subject.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, reactionGroups)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, ReactionGroup)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of Reactions left on the Issue.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, reactions)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Allows filtering Reactions by emoji.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, content)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, ReactionContent)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Allows specifying the order in which reactions are returned.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, orderBy)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, ReactionOrder)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ReactionConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The repository associated with this node.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, repository)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Repository)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP path for this issue comment""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, resourcePath)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was last updated.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, updatedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "General type updated timestamps will eventually be replaced by other field specific timestamps.")
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP URL for this issue comment""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, url)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Check if the current viewer can delete this object.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCanDelete)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Can user react to this subject""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCanReact)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Check if the current viewer can update this object.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCanUpdate)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Reasons why the current viewer can not update this comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCannotUpdateReasons)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, CommentCannotUpdateReason)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Did the viewer author this comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerDidAuthor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The connection type for IssueComment.""")
>  >  >  Name
>  >  >  >  token(T_NAME, IssueCommentConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of edges.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, edges)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, IssueCommentEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of nodes.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nodes)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, IssueComment)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Information to aid in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pageInfo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PageInfo)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the total count of items in the connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, totalCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An edge in a connection.""")
>  >  >  Name
>  >  >  >  token(T_NAME, IssueCommentEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A cursor for use in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, cursor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The item at the end of the edge.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, node)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, IssueComment)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The connection type for Issue.""")
>  >  >  Name
>  >  >  >  token(T_NAME, IssueConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of edges.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, edges)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, IssueEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of nodes.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nodes)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Issue)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Information to aid in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pageInfo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PageInfo)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the total count of items in the connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, totalCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An edge in a connection.""")
>  >  >  Name
>  >  >  >  token(T_NAME, IssueEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A cursor for use in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, cursor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The item at the end of the edge.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, node)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Issue)
>  >  InputDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Ways in which lists of issues can be ordered upon return.""")
>  >  >  Name
>  >  >  >  token(T_NAME, IssueOrder)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The field in which to order issues by.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, field)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, IssueOrderField)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The direction in which to order issues by the specified field.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, direction)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, OrderDirection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  EnumDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Properties by which issue connections can be ordered.""")
>  >  >  Name
>  >  >  >  token(T_NAME, IssueOrderField)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Order issues by creation time""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, CREATED_AT)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Order issues by update time""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, UPDATED_AT)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Order issues by comment count""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, COMMENTS)
>  >  UnionDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Used for return value of Repository.issueOrPullRequest.""")
>  >  >  Name
>  >  >  >  token(T_NAME, IssueOrPullRequest)
>  >  >  Relations
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Issue)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, PullRequest)
>  >  EnumDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The possible PubSub channels for an issue.""")
>  >  >  Name
>  >  >  >  token(T_NAME, IssuePubSubTopic)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The channel ID for observing issue updates.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, UPDATED)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The channel ID for marking an issue as read.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, MARKASREAD)
>  >  EnumDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The possible states of an issue.""")
>  >  >  Name
>  >  >  >  token(T_NAME, IssueState)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """An issue that is still open""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, OPEN)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """An issue that has been closed""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, CLOSED)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The connection type for IssueTimelineItem.""")
>  >  >  Name
>  >  >  >  token(T_NAME, IssueTimelineConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of edges.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, edges)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, IssueTimelineItemEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of nodes.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nodes)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, IssueTimelineItem)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Information to aid in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pageInfo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PageInfo)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the total count of items in the connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, totalCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  UnionDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An item in an issue timeline""")
>  >  >  Name
>  >  >  >  token(T_NAME, IssueTimelineItem)
>  >  >  Relations
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Commit)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, IssueComment)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, CrossReferencedEvent)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, ClosedEvent)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, ReopenedEvent)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, SubscribedEvent)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, UnsubscribedEvent)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, ReferencedEvent)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, AssignedEvent)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, UnassignedEvent)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, LabeledEvent)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, UnlabeledEvent)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, MilestonedEvent)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, DemilestonedEvent)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, RenamedTitleEvent)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, LockedEvent)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, UnlockedEvent)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An edge in a connection.""")
>  >  >  Name
>  >  >  >  token(T_NAME, IssueTimelineItemEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A cursor for use in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, cursor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The item at the end of the edge.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, node)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, IssueTimelineItem)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """
A label for categorizing Issues or Milestones with a given Repository.
""")
>  >  >  Name
>  >  >  >  token(T_NAME, Label)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the label color.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, color)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of issues associated with this label.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, issues)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """A list of label names to filter the pull requests by.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, labels)
>  >  >  >  >  List
>  >  >  >  >  >  Type
>  >  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Ordering options for issues returned from the connection.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, orderBy)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, IssueOrder)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """A list of states to filter the issues by.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, states)
>  >  >  >  >  List
>  >  >  >  >  >  Type
>  >  >  >  >  >  >  token(T_NAME, IssueState)
>  >  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, IssueConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the label name.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, name)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of pull requests associated with this label.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pullRequests)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """A list of states to filter the pull requests by.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, states)
>  >  >  >  >  List
>  >  >  >  >  >  Type
>  >  >  >  >  >  >  token(T_NAME, PullRequestState)
>  >  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """A list of label names to filter the pull requests by.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, labels)
>  >  >  >  >  List
>  >  >  >  >  >  Type
>  >  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """The head ref name to filter the pull requests by.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, headRefName)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """The base ref name to filter the pull requests by.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, baseRefName)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Ordering options for pull requests returned from the connection.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, orderBy)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, IssueOrder)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PullRequestConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The repository associated with this label.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, repository)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Repository)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  InterfaceDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An object that can have labels assigned to it.""")
>  >  >  Name
>  >  >  >  token(T_NAME, Labelable)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of labels associated with the object.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, labels)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, LabelConnection)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The connection type for Label.""")
>  >  >  Name
>  >  >  >  token(T_NAME, LabelConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of edges.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, edges)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, LabelEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of nodes.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nodes)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Label)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Information to aid in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pageInfo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PageInfo)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the total count of items in the connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, totalCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents a 'labeled' event on a given issue or pull request.""")
>  >  >  Name
>  >  >  >  token(T_NAME, LabeledEvent)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the actor who performed the event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, actor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the label associated with the 'labeled' event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, label)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Label)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the `Labelable` associated with the event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, labelable)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Labelable)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An edge in a connection.""")
>  >  >  Name
>  >  >  >  token(T_NAME, LabelEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A cursor for use in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, cursor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The item at the end of the edge.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, node)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Label)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents a given language found in repositories.""")
>  >  >  Name
>  >  >  >  token(T_NAME, Language)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The color defined for the current language.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, color)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The name of the current language.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, name)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """A list of languages associated with the parent.""")
>  >  >  Name
>  >  >  >  token(T_NAME, LanguageConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of edges.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, edges)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, LanguageEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of nodes.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nodes)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Language)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Information to aid in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pageInfo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PageInfo)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the total count of items in the connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, totalCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The total size in bytes of files written in that language.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, totalSize)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents the language of a repository.""")
>  >  >  Name
>  >  >  >  token(T_NAME, LanguageEdge)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, cursor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, node)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Language)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The number of bytes of code written in the language.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, size)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  InputDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Ordering options for language connections.""")
>  >  >  Name
>  >  >  >  token(T_NAME, LanguageOrder)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The field to order languages by.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, field)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, LanguageOrderField)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The ordering direction.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, direction)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, OrderDirection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  EnumDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Properties by which language connections can be ordered.""")
>  >  >  Name
>  >  >  >  token(T_NAME, LanguageOrderField)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Order languages by the size of all files containing the language""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, SIZE)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """A respository's open source license""")
>  >  >  Name
>  >  >  >  token(T_NAME, License)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The full text of the license""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, body)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The conditions set by the license""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, conditions)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, LicenseRule)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A human-readable description of the license""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, description)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Whether the license should be featured""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, featured)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Whether the license should be displayed in license pickers""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, hidden)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Instructions on how to implement the license""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, implementation)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The lowercased SPDX ID of the license""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, key)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The limitations set by the license""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, limitations)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, LicenseRule)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The license full name specified by <https://spdx.org/licenses>""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, name)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Customary short name if applicable (e.g, GPLv3)""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nickname)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The permissions set by the license""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, permissions)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, LicenseRule)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Short identifier specified by <https://spdx.org/licenses>""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, spdxId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """URL to the license on <https://choosealicense.com>""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, url)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Describes a License's conditions, permissions, and limitations""")
>  >  >  Name
>  >  >  >  token(T_NAME, LicenseRule)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A description of the rule""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, description)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The machine-readable rule key""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, key)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The human-readable rule label""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, label)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  InterfaceDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An object that can be locked.""")
>  >  >  Name
>  >  >  >  token(T_NAME, Lockable)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """`true` if the object is locked""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, locked)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents a 'locked' event on a given issue or pull request.""")
>  >  >  Name
>  >  >  >  token(T_NAME, LockedEvent)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the actor who performed the event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, actor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Object that was locked.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, lockable)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Lockable)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """A public description of a Marketplace category.""")
>  >  >  Name
>  >  >  >  token(T_NAME, MarketplaceCategory)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The category's description.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, description)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    The technical description of how apps listed in this category work with GitHub.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, howItWorks)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The category's name.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, name)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """How many Marketplace listings have this as their primary category.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, primaryListingCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP path for this Marketplace category.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, resourcePath)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """How many Marketplace listings have this as their secondary category.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, secondaryListingCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The short name of the category used in its URL.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, slug)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP URL for this Marketplace category.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, url)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """A listing in the GitHub integration marketplace.""")
>  >  >  Name
>  >  >  >  token(T_NAME, MarketplaceListing)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """URL to the listing owner's company site.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, companyUrl)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    The HTTP path for configuring access to the listing's integration or OAuth app
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, configurationResourcePath)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    The HTTP URL for configuring access to the listing's integration or OAuth app
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, configurationUrl)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """URL to the listing's documentation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, documentationUrl)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The listing's detailed description.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, extendedDescription)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The listing's detailed description rendered to HTML.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, extendedDescriptionHTML)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, HTML)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The listing's introductory description.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, fullDescription)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The listing's introductory description rendered to HTML.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, fullDescriptionHTML)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, HTML)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Whether this listing has been submitted for review from GitHub for approval to be displayed in the Marketplace.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, hasApprovalBeenRequested)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Does this listing have any plans with a free trial?""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, hasPublishedFreeTrialPlans)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Does this listing have a terms of service link?""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, hasTermsOfService)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A technical description of how this app works with GitHub.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, howItWorks)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The listing's technical description rendered to HTML.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, howItWorksHTML)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, HTML)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """URL to install the product to the viewer's account or organization.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, installationUrl)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Whether this listing's app has been installed for the current viewer""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, installedForViewer)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Whether this listing has been approved for display in the Marketplace.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, isApproved)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Whether this listing has been removed from the Marketplace.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, isDelisted)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Whether this listing is still an editable draft that has not been submitted
    for review and is not publicly visible in the Marketplace.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, isDraft)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Whether the product this listing represents is available as part of a paid plan.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, isPaid)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Whether this listing has been rejected by GitHub for display in the Marketplace.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, isRejected)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The hex color code, without the leading '#', for the logo background.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, logoBackgroundColor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """URL for the listing's logo image.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, logoUrl)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """The size in pixels of the resulting square image.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, size)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  Value
>  >  >  >  >  >  token(T_NUMBER_VALUE, 400)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The listing's full name.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, name)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    The listing's very short description without a trailing period or ampersands.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, normalizedShortDescription)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """URL to the listing's detailed pricing.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pricingUrl)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The category that best describes the listing.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, primaryCategory)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, MarketplaceCategory)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """URL to the listing's privacy policy.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, privacyPolicyUrl)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP path for the Marketplace listing.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, resourcePath)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The URLs for the listing's screenshots.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, screenshotUrls)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """An alternate category that describes the listing.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, secondaryCategory)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, MarketplaceCategory)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The listing's very short description.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, shortDescription)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The short name of the listing used in its URL.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, slug)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """URL to the listing's status page.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, statusUrl)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """An email address for support for this listing's app.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, supportEmail)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Either a URL or an email address for support for this listing's app.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, supportUrl)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """URL to the listing's terms of service.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, termsOfServiceUrl)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP URL for the Marketplace listing.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, url)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Can the current viewer add plans for this Marketplace listing.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCanAddPlans)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Can the current viewer approve this Marketplace listing.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCanApprove)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Can the current viewer delist this Marketplace listing.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCanDelist)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Can the current viewer edit this Marketplace listing.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCanEdit)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Can the current viewer edit the primary and secondary category of this
    Marketplace listing.

    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCanEditCategories)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Can the current viewer edit the plans for this Marketplace listing.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCanEditPlans)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Can the current viewer return this Marketplace listing to draft state
    so it becomes editable again.

    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCanRedraft)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Can the current viewer reject this Marketplace listing by returning it to
    an editable draft state or rejecting it entirely.

    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCanReject)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Can the current viewer request this listing be reviewed for display in
    the Marketplace.

    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCanRequestApproval)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Indicates whether the current user has an active subscription to this Marketplace listing.

    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerHasPurchased)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Indicates if the current user has purchased a subscription to this Marketplace listing
    for all of the organizations the user owns.

    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerHasPurchasedForAllOrganizations)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Does the current viewer role allow them to administer this Marketplace listing.

    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerIsListingAdmin)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Look up Marketplace Listings""")
>  >  >  Name
>  >  >  >  token(T_NAME, MarketplaceListingConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of edges.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, edges)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, MarketplaceListingEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of nodes.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nodes)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, MarketplaceListing)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Information to aid in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pageInfo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PageInfo)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the total count of items in the connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, totalCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An edge in a connection.""")
>  >  >  Name
>  >  >  >  token(T_NAME, MarketplaceListingEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A cursor for use in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, cursor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The item at the end of the edge.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, node)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, MarketplaceListing)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents a 'mentioned' event on a given issue or pull request.""")
>  >  >  Name
>  >  >  >  token(T_NAME, MentionedEvent)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the actor who performed the event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, actor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the primary key from the database.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, databaseId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "Exposed database IDs will eventually be removed in favor of global Relay IDs.")
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  EnumDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Whether or not a PullRequest can be merged.""")
>  >  >  Name
>  >  >  >  token(T_NAME, MergeableState)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The pull request can be merged.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, MERGEABLE)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The pull request cannot be merged due to merge conflicts.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, CONFLICTING)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The mergeability of the pull request is still being calculated.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, UNKNOWN)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents a 'merged' event on a given pull request.""")
>  >  >  Name
>  >  >  >  token(T_NAME, MergedEvent)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, UniformResourceLocatable)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the actor who performed the event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, actor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the commit associated with the `merge` event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, commit)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Commit)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the Ref associated with the `merge` event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, mergeRef)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Ref)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the name of the Ref associated with the `merge` event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, mergeRefName)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """PullRequest referenced by event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pullRequest)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PullRequest)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP path for this merged event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, resourcePath)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP URL for this merged event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, url)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents a Milestone object on a given repository.""")
>  >  >  Name
>  >  >  >  token(T_NAME, Milestone)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Closable)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    `true` if the object is closed (definition of closed may depend on type)
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, closed)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was closed.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, closedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the actor who created the milestone.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, creator)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the description of the milestone.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, description)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the due date of the milestone.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, dueOn)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of issues associated with the milestone.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, issues)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """A list of label names to filter the pull requests by.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, labels)
>  >  >  >  >  List
>  >  >  >  >  >  Type
>  >  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Ordering options for issues returned from the connection.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, orderBy)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, IssueOrder)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """A list of states to filter the issues by.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, states)
>  >  >  >  >  List
>  >  >  >  >  >  Type
>  >  >  >  >  >  >  token(T_NAME, IssueState)
>  >  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, IssueConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the number of the milestone.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, number)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The repository associated with this milestone.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, repository)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Repository)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP path for this milestone""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, resourcePath)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the state of the milestone.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, state)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, MilestoneState)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the title of the milestone.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, title)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was last updated.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, updatedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "General type updated timestamps will eventually be replaced by other field specific timestamps.")
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP URL for this milestone""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, url)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The connection type for Milestone.""")
>  >  >  Name
>  >  >  >  token(T_NAME, MilestoneConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of edges.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, edges)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, MilestoneEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of nodes.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nodes)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Milestone)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Information to aid in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pageInfo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PageInfo)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the total count of items in the connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, totalCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents a 'milestoned' event on a given issue or pull request.""")
>  >  >  Name
>  >  >  >  token(T_NAME, MilestonedEvent)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the actor who performed the event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, actor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Identifies the milestone title associated with the 'milestoned' event.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, milestoneTitle)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Object referenced by event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, subject)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, MilestoneItem)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An edge in a connection.""")
>  >  >  Name
>  >  >  >  token(T_NAME, MilestoneEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A cursor for use in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, cursor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The item at the end of the edge.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, node)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Milestone)
>  >  UnionDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Types that can be inside a Milestone.""")
>  >  >  Name
>  >  >  >  token(T_NAME, MilestoneItem)
>  >  >  Relations
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Issue)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, PullRequest)
>  >  EnumDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The possible states of a milestone.""")
>  >  >  Name
>  >  >  >  token(T_NAME, MilestoneState)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A milestone that is still open.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, OPEN)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A milestone that has been closed.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, CLOSED)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """
Represents a 'moved_columns_in_project' event on a given issue or pull request.
""")
>  >  >  Name
>  >  >  >  token(T_NAME, MovedColumnsInProjectEvent)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the actor who performed the event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, actor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the primary key from the database.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, databaseId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "Exposed database IDs will eventually be removed in favor of global Relay IDs.")
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  InputDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated input type of MoveProjectCard""")
>  >  >  Name
>  >  >  >  token(T_NAME, MoveProjectCardInput)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The id of the card to move.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, cardId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The id of the column to move it into.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, columnId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Place the new card after the card with this id. Pass null to place it at the top.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, afterCardId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated return type of MoveProjectCard""")
>  >  >  Name
>  >  >  >  token(T_NAME, MoveProjectCardPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The new edge of the moved card.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, cardEdge)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ProjectCardEdge)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  InputDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated input type of MoveProjectColumn""")
>  >  >  Name
>  >  >  >  token(T_NAME, MoveProjectColumnInput)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The id of the column to move.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, columnId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Place the new column after the column with this id. Pass null to place it at the front.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, afterColumnId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated return type of MoveProjectColumn""")
>  >  >  Name
>  >  >  >  token(T_NAME, MoveProjectColumnPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The new edge of the moved column.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, columnEdge)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ProjectColumnEdge)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The root query for implementing GraphQL mutations.""")
>  >  >  Name
>  >  >  >  token(T_NAME, Mutation)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Applies a suggested topic to the repository.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, acceptTopicSuggestion)
>  >  >  >  Argument
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_INPUT, input)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, AcceptTopicSuggestionInput)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, AcceptTopicSuggestionPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Adds a comment to an Issue or Pull Request.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, addComment)
>  >  >  >  Argument
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_INPUT, input)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, AddCommentInput)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, AddCommentPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Adds a card to a ProjectColumn. Either `contentId` or `note` must be provided but **not** both.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, addProjectCard)
>  >  >  >  Argument
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_INPUT, input)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, AddProjectCardInput)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, AddProjectCardPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Adds a column to a Project.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, addProjectColumn)
>  >  >  >  Argument
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_INPUT, input)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, AddProjectColumnInput)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, AddProjectColumnPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Adds a review to a Pull Request.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, addPullRequestReview)
>  >  >  >  Argument
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_INPUT, input)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, AddPullRequestReviewInput)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, AddPullRequestReviewPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Adds a comment to a review.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, addPullRequestReviewComment)
>  >  >  >  Argument
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_INPUT, input)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, AddPullRequestReviewCommentInput)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, AddPullRequestReviewCommentPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Adds a reaction to a subject.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, addReaction)
>  >  >  >  Argument
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_INPUT, input)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, AddReactionInput)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, AddReactionPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Adds a star to a Starrable.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, addStar)
>  >  >  >  Argument
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_INPUT, input)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, AddStarInput)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, AddStarPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Creates a new project.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createProject)
>  >  >  >  Argument
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_INPUT, input)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, CreateProjectInput)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, CreateProjectPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Rejects a suggested topic for the repository.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, declineTopicSuggestion)
>  >  >  >  Argument
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_INPUT, input)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, DeclineTopicSuggestionInput)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DeclineTopicSuggestionPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Deletes a project.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, deleteProject)
>  >  >  >  Argument
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_INPUT, input)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, DeleteProjectInput)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DeleteProjectPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Deletes a project card.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, deleteProjectCard)
>  >  >  >  Argument
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_INPUT, input)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, DeleteProjectCardInput)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DeleteProjectCardPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Deletes a project column.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, deleteProjectColumn)
>  >  >  >  Argument
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_INPUT, input)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, DeleteProjectColumnInput)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DeleteProjectColumnPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Deletes a pull request review.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, deletePullRequestReview)
>  >  >  >  Argument
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_INPUT, input)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, DeletePullRequestReviewInput)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DeletePullRequestReviewPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Dismisses an approved or rejected pull request review.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, dismissPullRequestReview)
>  >  >  >  Argument
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_INPUT, input)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, DismissPullRequestReviewInput)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DismissPullRequestReviewPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Moves a project card to another place.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, moveProjectCard)
>  >  >  >  Argument
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_INPUT, input)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, MoveProjectCardInput)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, MoveProjectCardPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Moves a project column to another place.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, moveProjectColumn)
>  >  >  >  Argument
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_INPUT, input)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, MoveProjectColumnInput)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, MoveProjectColumnPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Removes outside collaborator from all repositories in an organization.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, removeOutsideCollaborator)
>  >  >  >  Argument
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_INPUT, input)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, RemoveOutsideCollaboratorInput)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, RemoveOutsideCollaboratorPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Removes a reaction from a subject.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, removeReaction)
>  >  >  >  Argument
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_INPUT, input)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, RemoveReactionInput)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, RemoveReactionPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Removes a star from a Starrable.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, removeStar)
>  >  >  >  Argument
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_INPUT, input)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, RemoveStarInput)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, RemoveStarPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Set review requests on a pull request.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, requestReviews)
>  >  >  >  Argument
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_INPUT, input)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, RequestReviewsInput)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, RequestReviewsPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Submits a pending pull request review.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, submitPullRequestReview)
>  >  >  >  Argument
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_INPUT, input)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, SubmitPullRequestReviewInput)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, SubmitPullRequestReviewPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Updates an existing project.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, updateProject)
>  >  >  >  Argument
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_INPUT, input)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, UpdateProjectInput)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, UpdateProjectPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Updates an existing project card.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, updateProjectCard)
>  >  >  >  Argument
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_INPUT, input)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, UpdateProjectCardInput)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, UpdateProjectCardPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Updates an existing project column.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, updateProjectColumn)
>  >  >  >  Argument
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_INPUT, input)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, UpdateProjectColumnInput)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, UpdateProjectColumnPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Updates the body of a pull request review.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, updatePullRequestReview)
>  >  >  >  Argument
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_INPUT, input)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, UpdatePullRequestReviewInput)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, UpdatePullRequestReviewPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Updates a pull request review comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, updatePullRequestReviewComment)
>  >  >  >  Argument
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_INPUT, input)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, UpdatePullRequestReviewCommentInput)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, UpdatePullRequestReviewCommentPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Updates viewers repository subscription state.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, updateSubscription)
>  >  >  >  Argument
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_INPUT, input)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, UpdateSubscriptionInput)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, UpdateSubscriptionPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Replaces the repository's topics with the given topics.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, updateTopics)
>  >  >  >  Argument
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_INPUT, input)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, UpdateTopicsInput)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, UpdateTopicsPayload)
>  >  InterfaceDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An object with an ID.""")
>  >  >  Name
>  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """ID of the object.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  EnumDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """
Possible directions in which to order a list of items when provided an `orderBy` argument.
""")
>  >  >  Name
>  >  >  >  token(T_NAME, OrderDirection)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Specifies an ascending order for a given `orderBy` argument.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, ASC)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Specifies a descending order for a given `orderBy` argument.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, DESC)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """
An account on GitHub, with one or more owners, that has repositories, members and teams.
""")
>  >  >  Name
>  >  >  >  token(T_NAME, Organization)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A URL pointing to the organization's public avatar.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, avatarUrl)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """The size of the resulting square image.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, size)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the primary key from the database.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, databaseId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "Exposed database IDs will eventually be removed in favor of global Relay IDs.")
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The organization's public profile description.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, description)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The organization's public email.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, email)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The organization's public profile location.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, location)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The organization's login name.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, login)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of users who are members of this organization.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, members)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, UserConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The organization's public profile name.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, name)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP path creating a new team""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, newTeamResourcePath)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP URL creating a new team""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, newTeamUrl)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The billing email for the organization.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, organizationBillingEmail)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of repositories this user has pinned to their profile""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pinnedRepositories)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """If non-null, filters repositories according to privacy""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, privacy)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, RepositoryPrivacy)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Ordering options for repositories returned from the connection""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, orderBy)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, RepositoryOrder)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Affiliation options for repositories returned from the connection""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, affiliations)
>  >  >  >  >  List
>  >  >  >  >  >  Type
>  >  >  >  >  >  >  token(T_NAME, RepositoryAffiliation)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        If non-null, filters repositories according to whether they have been locked
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, isLocked)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, RepositoryConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Find project by number.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, project)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """The project number to find.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, number)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Project)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of projects under the owner.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, projects)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Ordering options for projects returned from the connection""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, orderBy)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, ProjectOrder)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Query to search projects by, currently only searching by name.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, search)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """A list of states to filter the projects by.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, states)
>  >  >  >  >  List
>  >  >  >  >  >  Type
>  >  >  >  >  >  >  token(T_NAME, ProjectState)
>  >  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ProjectConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP path listing organization's projects""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, projectsResourcePath)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP URL listing organization's projects""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, projectsUrl)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of repositories that the user owns.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, repositories)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """If non-null, filters repositories according to privacy""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, privacy)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, RepositoryPrivacy)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Ordering options for repositories returned from the connection""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, orderBy)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, RepositoryOrder)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Affiliation options for repositories returned from the connection""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, affiliations)
>  >  >  >  >  List
>  >  >  >  >  >  Type
>  >  >  >  >  >  >  token(T_NAME, RepositoryAffiliation)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        If non-null, filters repositories according to whether they have been locked
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, isLocked)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        If non-null, filters repositories according to whether they are forks of another repository
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, isFork)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, RepositoryConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Find Repository.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, repository)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Name of Repository to find.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, name)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Repository)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP path for this user""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, resourcePath)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The Organization's SAML Identity Providers""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, samlIdentityProvider)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, OrganizationIdentityProvider)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Find an organization's team by its slug.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, team)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """The name or slug of the team to find.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, slug)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Team)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of teams in this organization.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, teams)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """If non-null, filters teams according to privacy""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, privacy)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, TeamPrivacy)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        If non-null, filters teams according to whether the viewer is an admin or member on team
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, role)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, TeamRole)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """If non-null, filters teams with query on team name and team slug""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_SCHEMA_QUERY, query)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """User logins to filter by""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, userLogins)
>  >  >  >  >  List
>  >  >  >  >  >  Type
>  >  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Ordering options for teams returned from the connection""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, orderBy)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, TeamOrder)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        If true, filters teams that are mapped to an LDAP Group (Enterprise only)
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, ldapMapped)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """If true, restrict to only root teams""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, rootTeamsOnly)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  Value
>  >  >  >  >  >  token(T_BOOL_FALSE, false)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, TeamConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP path listing organization's teams""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, teamsResourcePath)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP URL listing organization's teams""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, teamsUrl)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP URL for this user""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, url)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Organization is adminable by the viewer.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCanAdminister)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Can the current viewer create new projects on this owner.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCanCreateProjects)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Viewer can create repositories on this organization""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCanCreateRepositories)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Viewer can create teams on this organization.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCanCreateTeams)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Viewer is a member of this organization.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerIsAMember)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The organization's public profile URL.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, websiteUrl)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The connection type for Organization.""")
>  >  >  Name
>  >  >  >  token(T_NAME, OrganizationConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of edges.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, edges)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, OrganizationEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of nodes.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nodes)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Organization)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Information to aid in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pageInfo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PageInfo)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the total count of items in the connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, totalCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An edge in a connection.""")
>  >  >  Name
>  >  >  >  token(T_NAME, OrganizationEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A cursor for use in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, cursor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The item at the end of the edge.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, node)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Organization)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """
An Identity Provider configured to provision SAML and SCIM identities for Organizations
""")
>  >  >  Name
>  >  >  >  token(T_NAME, OrganizationIdentityProvider)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    The digest algorithm used to sign SAML requests for the Identity Provider.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, digestMethod)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """External Identities provisioned by this Identity Provider""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, externalIdentities)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ExternalIdentityConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    The x509 certificate used by the Identity Provder to sign assertions and responses.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, idpCertificate)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, X509Certificate)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The Issuer Entity ID for the SAML Identity Provider""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, issuer)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Organization this Identity Provider belongs to""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, organization)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Organization)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    The signature algorithm used to sign SAML requests for the Identity Provider.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, signatureMethod)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The URL endpoint for the Identity Provider's SAML SSO.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, ssoUrl)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An Invitation for a user to an organization.""")
>  >  >  Name
>  >  >  >  token(T_NAME, OrganizationInvitation)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The email address of the user invited to the organization.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, email)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The type of invitation that was sent (e.g. email, user).""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, invitationType)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, OrganizationInvitationType)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The user who was invited to the organization.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, invitee)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, User)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The user who created the invitation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, inviter)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, User)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The user's pending role in the organization (e.g. member, owner).""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, role)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, OrganizationInvitationRole)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The connection type for OrganizationInvitation.""")
>  >  >  Name
>  >  >  >  token(T_NAME, OrganizationInvitationConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of edges.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, edges)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, OrganizationInvitationEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of nodes.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nodes)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, OrganizationInvitation)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Information to aid in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pageInfo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PageInfo)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the total count of items in the connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, totalCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An edge in a connection.""")
>  >  >  Name
>  >  >  >  token(T_NAME, OrganizationInvitationEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A cursor for use in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, cursor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The item at the end of the edge.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, node)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, OrganizationInvitation)
>  >  EnumDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The possible organization invitation roles.""")
>  >  >  Name
>  >  >  >  token(T_NAME, OrganizationInvitationRole)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The user is invited to be a direct member of the organization.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, DIRECT_MEMBER)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The user is invited to be an admin of the organization.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, ADMIN)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The user is invited to be a billing manager of the organization.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, BILLING_MANAGER)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The user's previous role will be reinstated.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, REINSTATE)
>  >  EnumDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The possible organization invitation types.""")
>  >  >  Name
>  >  >  >  token(T_NAME, OrganizationInvitationType)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The invitation was to an existing user.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, USER)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The invitation was to an email address.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, EMAIL)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Information about pagination in a connection.""")
>  >  >  Name
>  >  >  >  token(T_NAME, PageInfo)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """When paginating forwards, the cursor to continue.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, endCursor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """When paginating forwards, are there more items?""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, hasNextPage)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """When paginating backwards, are there more items?""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, hasPreviousPage)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """When paginating backwards, the cursor to continue.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, startCursor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """
Projects manage issues, pull requests and notes within a project owner.
""")
>  >  >  Name
>  >  >  >  token(T_NAME, Project)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Closable)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The project's description body.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, body)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The projects description body rendered to HTML.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, bodyHTML)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, HTML)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    `true` if the object is closed (definition of closed may depend on type)
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, closed)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was closed.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, closedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """List of columns in the project""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, columns)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ProjectColumnConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The actor who originally created the project.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, creator)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the primary key from the database.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, databaseId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "Exposed database IDs will eventually be removed in favor of global Relay IDs.")
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The project's name.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, name)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The project's number.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, number)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    The project's owner. Currently limited to repositories and organizations.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, owner)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ProjectOwner)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """List of pending cards in this project""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pendingCards)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ProjectCardConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP path for this project""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, resourcePath)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Whether the project is open or closed.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, state)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ProjectState)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was last updated.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, updatedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "General type updated timestamps will eventually be replaced by other field specific timestamps.")
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP URL for this project""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, url)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Check if the current viewer can update this object.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCanUpdate)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """A card in a project.""")
>  >  >  Name
>  >  >  >  token(T_NAME, ProjectCard)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    The project column this card is associated under. A card may only belong to one
    project column at a time. The column field will be null if the card is created
    in a pending state and has yet to be associated with a column. Once cards are
    associated with a column, they will not become pending in the future.

    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, column)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ProjectColumn)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The card content item""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, content)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ProjectCardItem)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The actor who created this card""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, creator)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the primary key from the database.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, databaseId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "Exposed database IDs will eventually be removed in favor of global Relay IDs.")
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The card note""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, note)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The project that contains this card.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, project)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Project)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The column that contains this card.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, projectColumn)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ProjectColumn)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "Use ProjectCard.column instead. The associated column will be null if the card is in a pending state.")
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP path for this card""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, resourcePath)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The state of ProjectCard""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, state)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ProjectCardState)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was last updated.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, updatedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "General type updated timestamps will eventually be replaced by other field specific timestamps.")
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP URL for this card""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, url)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The connection type for ProjectCard.""")
>  >  >  Name
>  >  >  >  token(T_NAME, ProjectCardConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of edges.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, edges)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, ProjectCardEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of nodes.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nodes)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, ProjectCard)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Information to aid in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pageInfo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PageInfo)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the total count of items in the connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, totalCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An edge in a connection.""")
>  >  >  Name
>  >  >  >  token(T_NAME, ProjectCardEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A cursor for use in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, cursor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The item at the end of the edge.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, node)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ProjectCard)
>  >  UnionDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Types that can be inside Project Cards.""")
>  >  >  Name
>  >  >  >  token(T_NAME, ProjectCardItem)
>  >  >  Relations
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Issue)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, PullRequest)
>  >  EnumDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Various content states of a ProjectCard""")
>  >  >  Name
>  >  >  >  token(T_NAME, ProjectCardState)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The card has content only.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, CONTENT_ONLY)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The card has a note only.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, NOTE_ONLY)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The card is redacted.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, REDACTED)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """A column inside a project.""")
>  >  >  Name
>  >  >  >  token(T_NAME, ProjectColumn)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """List of cards in the column""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, cards)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ProjectCardConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the primary key from the database.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, databaseId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "Exposed database IDs will eventually be removed in favor of global Relay IDs.")
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The project column's name.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, name)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The project that contains this column.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, project)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Project)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP path for this project column""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, resourcePath)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was last updated.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, updatedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "General type updated timestamps will eventually be replaced by other field specific timestamps.")
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP URL for this project column""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, url)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The connection type for ProjectColumn.""")
>  >  >  Name
>  >  >  >  token(T_NAME, ProjectColumnConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of edges.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, edges)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, ProjectColumnEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of nodes.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nodes)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, ProjectColumn)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Information to aid in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pageInfo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PageInfo)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the total count of items in the connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, totalCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An edge in a connection.""")
>  >  >  Name
>  >  >  >  token(T_NAME, ProjectColumnEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A cursor for use in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, cursor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The item at the end of the edge.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, node)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ProjectColumn)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """A list of projects associated with the owner.""")
>  >  >  Name
>  >  >  >  token(T_NAME, ProjectConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of edges.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, edges)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, ProjectEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of nodes.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nodes)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Project)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Information to aid in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pageInfo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PageInfo)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the total count of items in the connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, totalCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An edge in a connection.""")
>  >  >  Name
>  >  >  >  token(T_NAME, ProjectEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A cursor for use in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, cursor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The item at the end of the edge.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, node)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Project)
>  >  InputDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Ways in which lists of projects can be ordered upon return.""")
>  >  >  Name
>  >  >  >  token(T_NAME, ProjectOrder)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The field in which to order projects by.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, field)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ProjectOrderField)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The direction in which to order projects by the specified field.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, direction)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, OrderDirection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  EnumDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Properties by which project connections can be ordered.""")
>  >  >  Name
>  >  >  >  token(T_NAME, ProjectOrderField)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Order projects by creation time""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, CREATED_AT)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Order projects by update time""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, UPDATED_AT)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Order projects by name""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, NAME)
>  >  InterfaceDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents an owner of a Project.""")
>  >  >  Name
>  >  >  >  token(T_NAME, ProjectOwner)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Find project by number.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, project)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """The project number to find.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, number)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Project)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of projects under the owner.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, projects)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Ordering options for projects returned from the connection""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, orderBy)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, ProjectOrder)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Query to search projects by, currently only searching by name.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, search)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """A list of states to filter the projects by.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, states)
>  >  >  >  >  List
>  >  >  >  >  >  Type
>  >  >  >  >  >  >  token(T_NAME, ProjectState)
>  >  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ProjectConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP path listing owners projects""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, projectsResourcePath)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP URL listing owners projects""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, projectsUrl)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Can the current viewer create new projects on this owner.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCanCreateProjects)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  EnumDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """State of the project; either 'open' or 'closed'""")
>  >  >  Name
>  >  >  >  token(T_NAME, ProjectState)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The project is open.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, OPEN)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The project is closed.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, CLOSED)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """A repository protected branch.""")
>  >  >  Name
>  >  >  >  token(T_NAME, ProtectedBranch)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The actor who created this protected branch.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, creator)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Will new commits pushed to this branch dismiss pull request review approvals.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, hasDismissableStaleReviews)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Are reviews required to update this branch.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, hasRequiredReviews)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Are status checks required to update this branch.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, hasRequiredStatusChecks)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Is pushing to this branch restricted.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, hasRestrictedPushes)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Is dismissal of pull request reviews restricted.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, hasRestrictedReviewDismissals)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Are branches required to be up to date before merging.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, hasStrictRequiredStatusChecks)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Can admins overwrite branch protection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, isAdminEnforced)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the name of the protected branch.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, name)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list push allowances for this protected branch.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pushAllowances)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PushAllowanceConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The repository associated with this protected branch.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, repository)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Repository)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    List of required status check contexts that must pass for commits to be accepted to this branch.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, requiredStatusCheckContexts)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list review dismissal allowances for this protected branch.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, reviewDismissalAllowances)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ReviewDismissalAllowanceConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The connection type for ProtectedBranch.""")
>  >  >  Name
>  >  >  >  token(T_NAME, ProtectedBranchConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of edges.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, edges)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, ProtectedBranchEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of nodes.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nodes)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, ProtectedBranch)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Information to aid in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pageInfo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PageInfo)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the total count of items in the connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, totalCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An edge in a connection.""")
>  >  >  Name
>  >  >  >  token(T_NAME, ProtectedBranchEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A cursor for use in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, cursor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The item at the end of the edge.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, node)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ProtectedBranch)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """A user's public key.""")
>  >  >  Name
>  >  >  >  token(T_NAME, PublicKey)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The public key string""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, key)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The connection type for PublicKey.""")
>  >  >  Name
>  >  >  >  token(T_NAME, PublicKeyConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of edges.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, edges)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, PublicKeyEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of nodes.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nodes)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, PublicKey)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Information to aid in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pageInfo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PageInfo)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the total count of items in the connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, totalCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An edge in a connection.""")
>  >  >  Name
>  >  >  >  token(T_NAME, PublicKeyEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A cursor for use in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, cursor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The item at the end of the edge.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, node)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PublicKey)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """A repository pull request.""")
>  >  >  Name
>  >  >  >  token(T_NAME, PullRequest)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Assignable)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The number of additions in this pull request.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, additions)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of Users assigned to this object.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, assignees)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, UserConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The actor who authored the comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, author)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Author's association with the subject of the comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, authorAssociation)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, CommentAuthorAssociation)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the base Ref associated with the pull request.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, baseRef)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Ref)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Identifies the name of the base Ref associated with the pull request, even if the ref has been deleted.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, baseRefName)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the body of the pull request.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, body)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the body of the pull request rendered to HTML.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, bodyHTML)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, HTML)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the body of the pull request rendered to text.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, bodyText)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The number of changed files in this pull request.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, changedFiles)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """`true` if the pull request is closed""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, closed)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was closed.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, closedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of comments associated with the pull request.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, comments)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, IssueCommentConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    A list of commits present in this pull request's head branch not present in the base branch.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, commits)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PullRequestCommitConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Check if this comment was created via an email reply.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdViaEmail)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the primary key from the database.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, databaseId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "Exposed database IDs will eventually be removed in favor of global Relay IDs.")
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The number of deletions in this pull request.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, deletions)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The actor who edited this pull request's body.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, editor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the head Ref associated with the pull request.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, headRef)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Ref)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Identifies the name of the head Ref associated with the pull request, even if the ref has been deleted.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, headRefName)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The repository associated with this pull request's head Ref.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, headRepository)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Repository)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    The owner of the repository associated with this pull request's head Ref.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, headRepositoryOwner)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, RepositoryOwner)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The head and base repositories are different.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, isCrossRepository)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of labels associated with the object.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, labels)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, LabelConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The moment the editor made the last edit""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, lastEditedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """`true` if the pull request is locked""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, locked)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The commit that was created when this pull request was merged.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, mergeCommit)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Commit)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Whether or not the pull request can be merged based on the existence of merge conflicts.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, mergeable)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, MergeableState)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Whether or not the pull request was merged.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, merged)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The date and time that the pull request was merged.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, mergedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the milestone associated with the pull request.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, milestone)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Milestone)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the pull request number.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, number)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    A list of Users that are participating in the Pull Request conversation.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, participants)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, UserConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    The commit that GitHub automatically generated to test if this pull request
    could be merged. This field will not return a value if the pull request is
    merged, or if the test merge commit is still being generated. See the
    `mergeable` field for more details on the mergeability of the pull request.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, potentialMergeCommit)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Commit)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """List of project cards associated with this pull request.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, projectCards)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ProjectCardConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies when the comment was published at.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, publishedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of reactions grouped by content left on the subject.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, reactionGroups)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, ReactionGroup)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of Reactions left on the Issue.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, reactions)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Allows filtering Reactions by emoji.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, content)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, ReactionContent)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Allows specifying the order in which reactions are returned.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, orderBy)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, ReactionOrder)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ReactionConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The repository associated with this node.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, repository)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Repository)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP path for this pull request.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, resourcePath)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP path for reverting this pull request.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, revertResourcePath)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP URL for reverting this pull request.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, revertUrl)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of review requests associated with the pull request.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, reviewRequests)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ReviewRequestConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of reviews associated with the pull request.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, reviews)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """A list of states to filter the reviews.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, states)
>  >  >  >  >  List
>  >  >  >  >  >  Type
>  >  >  >  >  >  >  token(T_NAME, PullRequestReviewState)
>  >  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Filter by author of the review.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, author)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PullRequestReviewConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the state of the pull request.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, state)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PullRequestState)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    A list of reviewer suggestions based on commit history and past review comments.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, suggestedReviewers)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, SuggestedReviewer)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    A list of events, comments, commits, etc. associated with the pull request.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, timeline)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Allows filtering timeline events by a `since` timestamp.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, since)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PullRequestTimelineConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the pull request title.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, title)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was last updated.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, updatedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "General type updated timestamps will eventually be replaced by other field specific timestamps.")
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP URL for this pull request.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, url)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Can user react to this subject""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCanReact)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Check if the viewer is able to change their subscription status for the repository.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCanSubscribe)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Check if the current viewer can update this object.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCanUpdate)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Reasons why the current viewer can not update this comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCannotUpdateReasons)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, CommentCannotUpdateReason)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Did the viewer author this comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerDidAuthor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerSubscription)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, SubscriptionState)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents a Git commit part of a pull request.""")
>  >  >  Name
>  >  >  >  token(T_NAME, PullRequestCommit)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, UniformResourceLocatable)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The Git commit object""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, commit)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Commit)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The pull request this commit belongs to""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pullRequest)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PullRequest)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP path for this pull request commit""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, resourcePath)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP URL for this pull request commit""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, url)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The connection type for PullRequestCommit.""")
>  >  >  Name
>  >  >  >  token(T_NAME, PullRequestCommitConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of edges.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, edges)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, PullRequestCommitEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of nodes.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nodes)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, PullRequestCommit)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Information to aid in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pageInfo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PageInfo)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the total count of items in the connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, totalCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An edge in a connection.""")
>  >  >  Name
>  >  >  >  token(T_NAME, PullRequestCommitEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A cursor for use in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, cursor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The item at the end of the edge.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, node)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PullRequestCommit)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The connection type for PullRequest.""")
>  >  >  Name
>  >  >  >  token(T_NAME, PullRequestConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of edges.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, edges)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, PullRequestEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of nodes.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nodes)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, PullRequest)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Information to aid in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pageInfo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PageInfo)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the total count of items in the connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, totalCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An edge in a connection.""")
>  >  >  Name
>  >  >  >  token(T_NAME, PullRequestEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A cursor for use in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, cursor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The item at the end of the edge.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, node)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PullRequest)
>  >  EnumDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The possible PubSub channels for a pull request.""")
>  >  >  Name
>  >  >  >  token(T_NAME, PullRequestPubSubTopic)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The channel ID for observing pull request updates.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, UPDATED)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The channel ID for marking an pull request as read.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, MARKASREAD)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The channel ID for observing head ref updates.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, HEAD_REF)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """A review object for a given pull request.""")
>  >  >  Name
>  >  >  >  token(T_NAME, PullRequestReview)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Comment)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The actor who authored the comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, author)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Author's association with the subject of the comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, authorAssociation)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, CommentAuthorAssociation)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the pull request review body.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, body)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The body of this review rendered to HTML.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, bodyHTML)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, HTML)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The body of this review rendered as plain text.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, bodyText)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of review comments for the current pull request review.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, comments)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PullRequestReviewCommentConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the commit associated with this pull request review.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, commit)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Commit)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Check if this comment was created via an email reply.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdViaEmail)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the primary key from the database.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, databaseId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "Exposed database IDs will eventually be removed in favor of global Relay IDs.")
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The actor who edited the comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, editor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The moment the editor made the last edit""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, lastEditedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies when the comment was published at.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, publishedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the pull request associated with this pull request review.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pullRequest)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PullRequest)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The repository associated with this node.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, repository)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Repository)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP path permalink for this PullRequestReview.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, resourcePath)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the current state of the pull request review.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, state)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PullRequestReviewState)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies when the Pull Request Review was submitted""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, submittedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was last updated.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, updatedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "General type updated timestamps will eventually be replaced by other field specific timestamps.")
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP URL permalink for this PullRequestReview.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, url)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Check if the current viewer can delete this object.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCanDelete)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Check if the current viewer can update this object.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCanUpdate)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Reasons why the current viewer can not update this comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCannotUpdateReasons)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, CommentCannotUpdateReason)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Did the viewer author this comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerDidAuthor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """A review comment associated with a given repository pull request.""")
>  >  >  Name
>  >  >  >  token(T_NAME, PullRequestReviewComment)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Comment)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The actor who authored the comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, author)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Author's association with the subject of the comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, authorAssociation)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, CommentAuthorAssociation)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The comment body of this review comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, body)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The comment body of this review comment rendered to HTML.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, bodyHTML)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, HTML)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The comment body of this review comment rendered as plain text.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, bodyText)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the commit associated with the comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, commit)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Commit)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies when the comment was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Check if this comment was created via an email reply.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdViaEmail)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the primary key from the database.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, databaseId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "Exposed database IDs will eventually be removed in favor of global Relay IDs.")
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The diff hunk to which the comment applies.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, diffHunk)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies when the comment was created in a draft state.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, draftedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The actor who edited the comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, editor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The moment the editor made the last edit""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, lastEditedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the original commit associated with the comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, originalCommit)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Commit)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The original line index in the diff to which the comment applies.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, originalPosition)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The path to which the comment applies.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, path)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The line index in the diff to which the comment applies.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, position)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies when the comment was published at.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, publishedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The pull request associated with this review comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pullRequest)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PullRequest)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The pull request review associated with this review comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pullRequestReview)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PullRequestReview)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of reactions grouped by content left on the subject.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, reactionGroups)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, ReactionGroup)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of Reactions left on the Issue.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, reactions)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Allows filtering Reactions by emoji.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, content)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, ReactionContent)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Allows specifying the order in which reactions are returned.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, orderBy)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, ReactionOrder)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ReactionConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The comment this is a reply to.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, replyTo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PullRequestReviewComment)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The repository associated with this node.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, repository)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Repository)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP path permalink for this review comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, resourcePath)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies when the comment was last updated.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, updatedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP URL permalink for this review comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, url)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Check if the current viewer can delete this object.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCanDelete)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Can user react to this subject""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCanReact)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Check if the current viewer can update this object.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCanUpdate)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Reasons why the current viewer can not update this comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCannotUpdateReasons)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, CommentCannotUpdateReason)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Did the viewer author this comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerDidAuthor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The connection type for PullRequestReviewComment.""")
>  >  >  Name
>  >  >  >  token(T_NAME, PullRequestReviewCommentConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of edges.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, edges)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, PullRequestReviewCommentEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of nodes.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nodes)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, PullRequestReviewComment)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Information to aid in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pageInfo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PageInfo)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the total count of items in the connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, totalCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An edge in a connection.""")
>  >  >  Name
>  >  >  >  token(T_NAME, PullRequestReviewCommentEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A cursor for use in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, cursor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The item at the end of the edge.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, node)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PullRequestReviewComment)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The connection type for PullRequestReview.""")
>  >  >  Name
>  >  >  >  token(T_NAME, PullRequestReviewConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of edges.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, edges)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, PullRequestReviewEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of nodes.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nodes)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, PullRequestReview)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Information to aid in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pageInfo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PageInfo)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the total count of items in the connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, totalCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An edge in a connection.""")
>  >  >  Name
>  >  >  >  token(T_NAME, PullRequestReviewEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A cursor for use in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, cursor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The item at the end of the edge.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, node)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PullRequestReview)
>  >  EnumDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The possible events to perform on a pull request review.""")
>  >  >  Name
>  >  >  >  token(T_NAME, PullRequestReviewEvent)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Submit general feedback without explicit approval.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, COMMENT)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Submit feedback and approve merging these changes.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, APPROVE)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Submit feedback that must be addressed before merging.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, REQUEST_CHANGES)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Dismiss review so it now longer effects merging.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, DISMISS)
>  >  EnumDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The possible states of a pull request review.""")
>  >  >  Name
>  >  >  >  token(T_NAME, PullRequestReviewState)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A review that has not yet been submitted.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, PENDING)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """An informational review.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, COMMENTED)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A review allowing the pull request to merge.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, APPROVED)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A review blocking the pull request from merging.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, CHANGES_REQUESTED)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A review that has been dismissed.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, DISMISSED)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """A threaded list of comments for a given pull request.""")
>  >  >  Name
>  >  >  >  token(T_NAME, PullRequestReviewThread)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of pull request comments associated with the thread.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, comments)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PullRequestReviewCommentConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the pull request associated with this thread.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pullRequest)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PullRequest)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the repository associated with this thread.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, repository)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Repository)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  EnumDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The possible states of a pull request.""")
>  >  >  Name
>  >  >  >  token(T_NAME, PullRequestState)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A pull request that is still open.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, OPEN)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A pull request that has been closed without being merged.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, CLOSED)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A pull request that has been closed by being merged.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, MERGED)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The connection type for PullRequestTimelineItem.""")
>  >  >  Name
>  >  >  >  token(T_NAME, PullRequestTimelineConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of edges.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, edges)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, PullRequestTimelineItemEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of nodes.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nodes)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, PullRequestTimelineItem)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Information to aid in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pageInfo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PageInfo)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the total count of items in the connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, totalCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  UnionDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An item in an pull request timeline""")
>  >  >  Name
>  >  >  >  token(T_NAME, PullRequestTimelineItem)
>  >  >  Relations
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Commit)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, CommitCommentThread)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, PullRequestReview)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, PullRequestReviewThread)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, PullRequestReviewComment)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, IssueComment)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, ClosedEvent)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, ReopenedEvent)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, SubscribedEvent)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, UnsubscribedEvent)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, MergedEvent)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, ReferencedEvent)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, CrossReferencedEvent)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, AssignedEvent)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, UnassignedEvent)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, LabeledEvent)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, UnlabeledEvent)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, MilestonedEvent)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, DemilestonedEvent)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, RenamedTitleEvent)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, LockedEvent)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, UnlockedEvent)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, DeployedEvent)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, HeadRefDeletedEvent)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, HeadRefRestoredEvent)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, HeadRefForcePushedEvent)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, BaseRefForcePushedEvent)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, ReviewRequestedEvent)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, ReviewRequestRemovedEvent)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, ReviewDismissedEvent)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An edge in a connection.""")
>  >  >  Name
>  >  >  >  token(T_NAME, PullRequestTimelineItemEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A cursor for use in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, cursor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The item at the end of the edge.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, node)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PullRequestTimelineItem)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """A team or user who has the ability to push to a protected branch.""")
>  >  >  Name
>  >  >  >  token(T_NAME, PushAllowance)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The actor that can push.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, actor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PushAllowanceActor)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Identifies the protected branch associated with the allowed user or team.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, protectedBranch)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ProtectedBranch)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  UnionDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Types that can be an actor.""")
>  >  >  Name
>  >  >  >  token(T_NAME, PushAllowanceActor)
>  >  >  Relations
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, User)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Team)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The connection type for PushAllowance.""")
>  >  >  Name
>  >  >  >  token(T_NAME, PushAllowanceConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of edges.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, edges)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, PushAllowanceEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of nodes.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nodes)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, PushAllowance)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Information to aid in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pageInfo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PageInfo)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the total count of items in the connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, totalCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An edge in a connection.""")
>  >  >  Name
>  >  >  >  token(T_NAME, PushAllowanceEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A cursor for use in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, cursor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The item at the end of the edge.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, node)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PushAllowance)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The query root of GitHub's GraphQL interface.""")
>  >  >  Name
>  >  >  >  token(T_NAME, Query)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Look up a code of conduct by its key""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, codeOfConduct)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """The code of conduct's key""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, key)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, CodeOfConduct)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Look up a code of conduct by its key""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, codesOfConduct)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, CodeOfConduct)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Look up an open source license by its key""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, license)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """The license's downcased SPDX ID""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, key)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, License)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Return a list of known open source licenses""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, licenses)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, License)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Get alphabetically sorted list of Marketplace categories""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, marketplaceCategories)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Exclude categories with no listings.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, excludeEmpty)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, MarketplaceCategory)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Look up a Marketplace category by its slug.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, marketplaceCategory)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """The URL slug of the category.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, slug)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, MarketplaceCategory)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Look up a single Marketplace listing""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, marketplaceListing)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Select the listing that matches this slug. It's the short name of the listing used in its URL.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, slug)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, MarketplaceListing)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Look up Marketplace listings""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, marketplaceListings)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Select only listings with the given category.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, categorySlug)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Select listings to which user has admin access. If omitted, listings visible to the
        viewer are returned.

        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, viewerCanAdmin)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Select listings that can be administered by the specified user.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, adminId)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, ID)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Select listings for products owned by the specified organization.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, organizationId)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, ID)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Select listings visible to the viewer even if they are not approved. If omitted or
        false, only approved listings will be returned.

        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, allStates)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Select the listings with these slugs, if they are visible to the viewer.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, slugs)
>  >  >  >  >  List
>  >  >  >  >  >  Type
>  >  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Select only listings where the primary category matches the given category slug.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, primaryCategoryOnly)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  Value
>  >  >  >  >  >  token(T_BOOL_FALSE, false)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Select only listings that offer a free trial.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, withFreeTrialsOnly)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  Value
>  >  >  >  >  >  token(T_BOOL_FALSE, false)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, MarketplaceListingConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Return information about the GitHub instance""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, meta)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, GitHubMetadata)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Fetches an object given its ID.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, node)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """ID of the object.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, id)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Lookup nodes by a list of IDs.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nodes)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """The list of node IDs.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, ids)
>  >  >  >  >  List
>  >  >  >  >  >  Type
>  >  >  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Node)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Lookup a organization by login.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, organization)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """The organization's login.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, login)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Organization)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The client's rate limit information.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, rateLimit)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """If true, calculate the cost for the query without evaluating it""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, dryRun)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  Value
>  >  >  >  >  >  token(T_BOOL_FALSE, false)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, RateLimit)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Hack to workaround https://github.com/facebook/relay/issues/112 re-exposing the root query object
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, relay)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Query)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Lookup a given repository by the owner and repository name.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, repository)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """The login field of a user or organization""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, owner)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """The name of the repository""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, name)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Repository)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Lookup a repository owner (ie. either a User or an Organization) by login.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, repositoryOwner)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """The username to lookup the owner by.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, login)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, RepositoryOwner)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Lookup resource by a URL.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, resource)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """The URL.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, url)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, UniformResourceLocatable)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Perform a search across resources.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, search)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """The search string to look for.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_SCHEMA_QUERY, query)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """The types of search items to search within.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_TYPE, type)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, SearchType)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, SearchResultItemConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Look up a topic by name.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, topic)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """The topic's name.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, name)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Topic)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Lookup a user by login.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, user)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """The user's login.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, login)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, User)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The currently authenticated user.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewer)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, User)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents the client's rate limit.""")
>  >  >  Name
>  >  >  >  token(T_NAME, RateLimit)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The point cost for the current query counting against the rate limit.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, cost)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    The maximum number of points the client is permitted to consume in a 60 minute window.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, limit)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The maximum number of nodes this query may return""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nodeCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The number of points remaining in the current rate limit window.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, remaining)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    The time at which the current rate limit window resets in UTC epoch seconds.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, resetAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  InterfaceDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents a subject that can be reacted on.""")
>  >  >  Name
>  >  >  >  token(T_NAME, Reactable)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the primary key from the database.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, databaseId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "Exposed database IDs will eventually be removed in favor of global Relay IDs.")
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of reactions grouped by content left on the subject.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, reactionGroups)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, ReactionGroup)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of Reactions left on the Issue.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, reactions)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Allows filtering Reactions by emoji.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, content)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, ReactionContent)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Allows specifying the order in which reactions are returned.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, orderBy)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, ReactionOrder)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ReactionConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Can user react to this subject""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCanReact)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The connection type for User.""")
>  >  >  Name
>  >  >  >  token(T_NAME, ReactingUserConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of edges.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, edges)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, ReactingUserEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of nodes.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nodes)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, User)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Information to aid in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pageInfo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PageInfo)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the total count of items in the connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, totalCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents a user that's made a reaction.""")
>  >  >  Name
>  >  >  >  token(T_NAME, ReactingUserEdge)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, cursor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, node)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, User)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The moment when the user made the reaction.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, reactedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An emoji reaction to a particular piece of content.""")
>  >  >  Name
>  >  >  >  token(T_NAME, Reaction)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the emoji reaction.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, content)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ReactionContent)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the primary key from the database.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, databaseId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "Exposed database IDs will eventually be removed in favor of global Relay IDs.")
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The reactable piece of content""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, reactable)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Reactable)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the user who created this reaction.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, user)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, User)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """A list of reactions that have been left on the subject.""")
>  >  >  Name
>  >  >  >  token(T_NAME, ReactionConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of edges.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, edges)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, ReactionEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of nodes.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nodes)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Reaction)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Information to aid in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pageInfo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PageInfo)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the total count of items in the connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, totalCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Whether or not the authenticated user has left a reaction on the subject.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerHasReacted)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  EnumDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Emojis that can be attached to Issues, Pull Requests and Comments.""")
>  >  >  Name
>  >  >  >  token(T_NAME, ReactionContent)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Represents the 👍 emoji.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, THUMBS_UP)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Represents the 👎 emoji.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, THUMBS_DOWN)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Represents the 😄 emoji.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, LAUGH)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Represents the 🎉 emoji.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, HOORAY)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Represents the 😕 emoji.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, CONFUSED)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Represents the ❤️ emoji.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, HEART)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An edge in a connection.""")
>  >  >  Name
>  >  >  >  token(T_NAME, ReactionEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A cursor for use in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, cursor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The item at the end of the edge.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, node)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Reaction)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """A group of emoji reactions to a particular piece of content.""")
>  >  >  Name
>  >  >  >  token(T_NAME, ReactionGroup)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the emoji reaction.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, content)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ReactionContent)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies when the reaction was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The subject that was reacted to.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, subject)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Reactable)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Users who have reacted to the reaction subject with the emotion represented by this reaction group
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, users)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ReactingUserConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Whether or not the authenticated user has left a reaction on the subject.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerHasReacted)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  InputDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Ways in which lists of reactions can be ordered upon return.""")
>  >  >  Name
>  >  >  >  token(T_NAME, ReactionOrder)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The field in which to order reactions by.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, field)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ReactionOrderField)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The direction in which to order reactions by the specified field.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, direction)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, OrderDirection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  EnumDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """A list of fields that reactions can be ordered by.""")
>  >  >  Name
>  >  >  >  token(T_NAME, ReactionOrderField)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Allows ordering a list of reactions by when they were created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, CREATED_AT)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents a Git reference.""")
>  >  >  Name
>  >  >  >  token(T_NAME, Ref)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of pull requests with this ref as the head ref.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, associatedPullRequests)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """A list of states to filter the pull requests by.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, states)
>  >  >  >  >  List
>  >  >  >  >  >  Type
>  >  >  >  >  >  >  token(T_NAME, PullRequestState)
>  >  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """A list of label names to filter the pull requests by.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, labels)
>  >  >  >  >  List
>  >  >  >  >  >  Type
>  >  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """The head ref name to filter the pull requests by.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, headRefName)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """The base ref name to filter the pull requests by.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, baseRefName)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Ordering options for pull requests returned from the connection.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, orderBy)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, IssueOrder)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PullRequestConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The ref name.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, name)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The ref's prefix, such as `refs/heads/` or `refs/tags/`.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, prefix)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The repository the ref belongs to.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, repository)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Repository)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The object the ref points to.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, target)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, GitObject)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The connection type for Ref.""")
>  >  >  Name
>  >  >  >  token(T_NAME, RefConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of edges.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, edges)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, RefEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of nodes.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nodes)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Ref)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Information to aid in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pageInfo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PageInfo)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the total count of items in the connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, totalCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An edge in a connection.""")
>  >  >  Name
>  >  >  >  token(T_NAME, RefEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A cursor for use in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, cursor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The item at the end of the edge.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, node)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Ref)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents a 'referenced' event on a given `ReferencedSubject`.""")
>  >  >  Name
>  >  >  >  token(T_NAME, ReferencedEvent)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the actor who performed the event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, actor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the commit associated with the 'referenced' event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, commit)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Commit)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the repository associated with the 'referenced' event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, commitRepository)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Repository)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Reference originated in a different repository.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, isCrossReference)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "Use ReferencedEvent.isCrossRepository instead.")
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Reference originated in a different repository.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, isCrossRepository)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Checks if the commit message itself references the subject. Can be false in the case of a commit comment reference.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, isDirectReference)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Object referenced by event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, subject)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ReferencedSubject)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  UnionDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Any referencable object""")
>  >  >  Name
>  >  >  >  token(T_NAME, ReferencedSubject)
>  >  >  Relations
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Issue)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, PullRequest)
>  >  InputDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Ways in which lists of git refs can be ordered upon return.""")
>  >  >  Name
>  >  >  >  token(T_NAME, RefOrder)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The field in which to order refs by.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, field)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, RefOrderField)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The direction in which to order refs by the specified field.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, direction)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, OrderDirection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  EnumDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Properties by which ref connections can be ordered.""")
>  >  >  Name
>  >  >  >  token(T_NAME, RefOrderField)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Order refs by underlying commit date if the ref prefix is refs/tags/""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, TAG_COMMIT_DATE)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Order refs by their alphanumeric name""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, ALPHABETICAL)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """A release contains the content for a release.""")
>  >  >  Name
>  >  >  >  token(T_NAME, Release)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, UniformResourceLocatable)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The author of the release""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, author)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, User)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the description of the release.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, description)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Whether or not the release is a draft""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, isDraft)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Whether or not the release is a prerelease""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, isPrerelease)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the title of the release.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, name)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the release was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, publishedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """List of releases assets which are dependent on this release.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, releaseAssets)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """A list of names to filter the assets by.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, name)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ReleaseAssetConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP path for this issue""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, resourcePath)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The Git tag the release points to""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, tag)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Ref)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was last updated.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, updatedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "General type updated timestamps will eventually be replaced by other field specific timestamps.")
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP URL for this issue""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, url)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """A release asset contains the content for a release asset.""")
>  >  >  Name
>  >  >  >  token(T_NAME, ReleaseAsset)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The asset's content-type""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, contentType)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The number of times this asset was downloaded""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, downloadCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Identifies the URL where you can download the release asset via the browser.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, downloadUrl)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the title of the release asset.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, name)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Release that the asset is associated with""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, release)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Release)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The size (in bytes) of the asset""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, size)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was last updated.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, updatedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "General type updated timestamps will eventually be replaced by other field specific timestamps.")
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The user that performed the upload""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, uploadedBy)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, User)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the URL of the release asset.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, url)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The connection type for ReleaseAsset.""")
>  >  >  Name
>  >  >  >  token(T_NAME, ReleaseAssetConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of edges.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, edges)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, ReleaseAssetEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of nodes.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nodes)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, ReleaseAsset)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Information to aid in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pageInfo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PageInfo)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the total count of items in the connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, totalCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An edge in a connection.""")
>  >  >  Name
>  >  >  >  token(T_NAME, ReleaseAssetEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A cursor for use in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, cursor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The item at the end of the edge.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, node)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ReleaseAsset)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The connection type for Release.""")
>  >  >  Name
>  >  >  >  token(T_NAME, ReleaseConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of edges.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, edges)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, ReleaseEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of nodes.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nodes)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Release)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Information to aid in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pageInfo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PageInfo)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the total count of items in the connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, totalCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An edge in a connection.""")
>  >  >  Name
>  >  >  >  token(T_NAME, ReleaseEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A cursor for use in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, cursor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The item at the end of the edge.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, node)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Release)
>  >  InputDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Ways in which lists of releases can be ordered upon return.""")
>  >  >  Name
>  >  >  >  token(T_NAME, ReleaseOrder)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The field in which to order releases by.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, field)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ReleaseOrderField)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The direction in which to order releases by the specified field.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, direction)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, OrderDirection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  EnumDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Properties by which release connections can be ordered.""")
>  >  >  Name
>  >  >  >  token(T_NAME, ReleaseOrderField)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Order releases by creation time""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, CREATED_AT)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Order releases alphabetically by name""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, NAME)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """
Represents a 'removed_from_project' event on a given issue or pull request.
""")
>  >  >  Name
>  >  >  >  token(T_NAME, RemovedFromProjectEvent)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the actor who performed the event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, actor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the primary key from the database.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, databaseId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "Exposed database IDs will eventually be removed in favor of global Relay IDs.")
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  InputDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated input type of RemoveOutsideCollaborator""")
>  >  >  Name
>  >  >  >  token(T_NAME, RemoveOutsideCollaboratorInput)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The ID of the outside collaborator to remove.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, userId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The ID of the organization to remove the outside collaborator from.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, organizationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated return type of RemoveOutsideCollaborator""")
>  >  >  Name
>  >  >  >  token(T_NAME, RemoveOutsideCollaboratorPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The user that was removed as an outside collaborator.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, removedUser)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, User)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  InputDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated input type of RemoveReaction""")
>  >  >  Name
>  >  >  >  token(T_NAME, RemoveReactionInput)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The Node ID of the subject to modify.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, subjectId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The name of the emoji to react with.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, content)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ReactionContent)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated return type of RemoveReaction""")
>  >  >  Name
>  >  >  >  token(T_NAME, RemoveReactionPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The reaction object.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, reaction)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Reaction)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The reactable subject.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, subject)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Reactable)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  InputDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated input type of RemoveStar""")
>  >  >  Name
>  >  >  >  token(T_NAME, RemoveStarInput)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The Starrable ID to unstar.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, starrableId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated return type of RemoveStar""")
>  >  >  Name
>  >  >  >  token(T_NAME, RemoveStarPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The starrable.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, starrable)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Starrable)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents a 'renamed' event on a given issue or pull request""")
>  >  >  Name
>  >  >  >  token(T_NAME, RenamedTitleEvent)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the actor who performed the event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, actor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the current title of the issue or pull request.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, currentTitle)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the previous title of the issue or pull request.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, previousTitle)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Subject that was renamed.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, subject)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, RenamedTitleSubject)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  UnionDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An object which has a renamable title""")
>  >  >  Name
>  >  >  >  token(T_NAME, RenamedTitleSubject)
>  >  >  Relations
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Issue)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, PullRequest)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents a 'reopened' event on any `Closable`.""")
>  >  >  Name
>  >  >  >  token(T_NAME, ReopenedEvent)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the actor who performed the event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, actor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Object that was reopened.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, closable)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Closable)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """A repository contains the content for a project.""")
>  >  >  Name
>  >  >  >  token(T_NAME, Repository)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, ProjectOwner)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of users that can be assigned to issues in this repository.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, assignableUsers)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, UserConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Returns the code of conduct for this repository""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, codeOfConduct)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, CodeOfConduct)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of collaborators associated with the repository.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, collaborators)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Collaborators affiliation level with a repository.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, affiliation)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, CollaboratorAffiliation)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, RepositoryCollaboratorConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of commit comments associated with the repository.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, commitComments)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, CommitCommentConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the primary key from the database.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, databaseId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "Exposed database IDs will eventually be removed in favor of global Relay IDs.")
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The Ref associated with the repository's default branch.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, defaultBranchRef)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Ref)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of protected branches that are on this repository.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, deployKeys)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DeployKeyConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Deployments associated with the repository""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, deployments)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Environments to list deployments for""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, environments)
>  >  >  >  >  List
>  >  >  >  >  >  Type
>  >  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DeploymentConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The description of the repository.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, description)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The description of the repository rendered to HTML.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, descriptionHTML)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, HTML)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The number of kilobytes this repository occupies on disk.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, diskUsage)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Returns how many forks there are of this repository in the whole network.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, forkCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of direct forked repositories.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, forks)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """If non-null, filters repositories according to privacy""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, privacy)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, RepositoryPrivacy)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Ordering options for repositories returned from the connection""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, orderBy)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, RepositoryOrder)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Affiliation options for repositories returned from the connection""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, affiliations)
>  >  >  >  >  List
>  >  >  >  >  >  Type
>  >  >  >  >  >  >  token(T_NAME, RepositoryAffiliation)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        If non-null, filters repositories according to whether they have been locked
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, isLocked)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, RepositoryConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Indicates if the repository has issues feature enabled.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, hasIssuesEnabled)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Indicates if the repository has wiki feature enabled.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, hasWikiEnabled)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The repository's URL.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, homepageUrl)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Indicates if the repository is unmaintained.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, isArchived)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies if the repository is a fork.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, isFork)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Indicates if the repository has been locked or not.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, isLocked)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies if the repository is a mirror.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, isMirror)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies if the repository is private.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, isPrivate)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Returns a single issue from the current repository by number.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, issue)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """The number for the issue to be returned.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, number)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Issue)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Returns a single issue-like object from the current repository by number.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, issueOrPullRequest)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """The number for the issue to be returned.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, number)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, IssueOrPullRequest)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of issues that have been opened in the repository.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, issues)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """A list of label names to filter the pull requests by.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, labels)
>  >  >  >  >  List
>  >  >  >  >  >  Type
>  >  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Ordering options for issues returned from the connection.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, orderBy)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, IssueOrder)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """A list of states to filter the issues by.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, states)
>  >  >  >  >  List
>  >  >  >  >  >  Type
>  >  >  >  >  >  >  token(T_NAME, IssueState)
>  >  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, IssueConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Returns a single label by name""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, label)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Label name""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, name)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Label)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of labels associated with the repository.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, labels)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, LabelConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    A list containing a breakdown of the language composition of the repository.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, languages)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Order for connection""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, orderBy)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, LanguageOrder)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, LanguageConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The license associated with the repository""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, license)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "Use Repository.licenseInfo instead.")
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The license associated with the repository""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, licenseInfo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, License)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The reason the repository has been locked.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, lockReason)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, RepositoryLockReason)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    A list of Users that can be mentioned in the context of the repository.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, mentionableUsers)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, UserConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Returns a single milestone from the current repository by number.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, milestone)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """The number for the milestone to be returned.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, number)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Milestone)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of milestones associated with the repository.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, milestones)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, MilestoneConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The repository's original mirror URL.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, mirrorUrl)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The name of the repository.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, name)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The repository's name with owner.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nameWithOwner)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A Git object in the repository""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, object)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """The Git object ID""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, oid)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, GitObjectID)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """A Git revision expression suitable for rev-parse""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, expression)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, GitObject)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The User owner of the repository.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, owner)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, RepositoryOwner)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The repository parent, if this is a fork.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, parent)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Repository)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The primary language of the repository's code.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, primaryLanguage)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Language)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Find project by number.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, project)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """The project number to find.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, number)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Project)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of projects under the owner.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, projects)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Ordering options for projects returned from the connection""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, orderBy)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, ProjectOrder)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Query to search projects by, currently only searching by name.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, search)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """A list of states to filter the projects by.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, states)
>  >  >  >  >  List
>  >  >  >  >  >  Type
>  >  >  >  >  >  >  token(T_NAME, ProjectState)
>  >  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ProjectConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP path listing repository's projects""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, projectsResourcePath)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP URL listing repository's projects""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, projectsUrl)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of protected branches that are on this repository.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, protectedBranches)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ProtectedBranchConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Returns a single pull request from the current repository by number.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pullRequest)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """The number for the pull request to be returned.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, number)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PullRequest)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of pull requests that have been opened in the repository.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pullRequests)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """A list of states to filter the pull requests by.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, states)
>  >  >  >  >  List
>  >  >  >  >  >  Type
>  >  >  >  >  >  >  token(T_NAME, PullRequestState)
>  >  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """A list of label names to filter the pull requests by.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, labels)
>  >  >  >  >  List
>  >  >  >  >  >  Type
>  >  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """The head ref name to filter the pull requests by.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, headRefName)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """The base ref name to filter the pull requests by.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, baseRefName)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Ordering options for pull requests returned from the connection.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, orderBy)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, IssueOrder)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PullRequestConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies when the repository was last pushed to.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pushedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Fetch a given ref from the repository""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, ref)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        The ref to retrieve.Fully qualified matches are checked in order
        (`refs/heads/master`) before falling back onto checks for short name matches (`master`).
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, qualifiedName)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Ref)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Fetch a list of refs from the repository""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, refs)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """A ref name prefix like `refs/heads/`, `refs/tags/`, etc.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, refPrefix)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """DEPRECATED: use orderBy. The ordering direction.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, direction)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, OrderDirection)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Ordering options for refs returned from the connection.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, orderBy)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, RefOrder)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, RefConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Lookup a single release given various criteria.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, release)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """The name of the Tag the Release was created from""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, tagName)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Release)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """List of releases which are dependent on this repository.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, releases)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Order for connection""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, orderBy)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, ReleaseOrder)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ReleaseConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of applied repository-topic associations for this repository.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, repositoryTopics)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, RepositoryTopicConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP path for this repository""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, resourcePath)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    A description of the repository, rendered to HTML without any links in it.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, shortDescriptionHTML)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """How many characters to return.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, limit)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  Value
>  >  >  >  >  >  token(T_NUMBER_VALUE, 200)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, HTML)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The SSH URL to clone this repository""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, sshUrl)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, GitSSHRemote)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of users who have starred this starrable.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, stargazers)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Order for connection""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, orderBy)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, StarOrder)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, StargazerConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was last updated.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, updatedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "General type updated timestamps will eventually be replaced by other field specific timestamps.")
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP URL for this repository""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, url)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Indicates whether the viewer has admin permissions on this repository.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCanAdminister)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Can the current viewer create new projects on this owner.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCanCreateProjects)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Check if the viewer is able to change their subscription status for the repository.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCanSubscribe)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Indicates whether the viewer can update the topics of this repository.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCanUpdateTopics)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Returns a boolean indicating whether the viewing user has starred this starrable.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerHasStarred)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerSubscription)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, SubscriptionState)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of users watching the repository.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, watchers)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, UserConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  EnumDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The affiliation of a user to a repository""")
>  >  >  Name
>  >  >  >  token(T_NAME, RepositoryAffiliation)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Repositories that are owned by the authenticated user.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, OWNER)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Repositories that the user has been added to as a collaborator.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, COLLABORATOR)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Repositories that the user has access to through being a member of an
    organization. This includes every repository on every team that the user is on.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, ORGANIZATION_MEMBER)
>  >  EnumDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The affiliation type between collaborator and repository.""")
>  >  >  Name
>  >  >  >  token(T_NAME, RepositoryCollaboratorAffiliation)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """All collaborators of the repository.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, ALL)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """All outside collaborators of an organization-owned repository.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, OUTSIDE)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The connection type for User.""")
>  >  >  Name
>  >  >  >  token(T_NAME, RepositoryCollaboratorConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of edges.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, edges)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, RepositoryCollaboratorEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of nodes.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nodes)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, User)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Information to aid in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pageInfo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PageInfo)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the total count of items in the connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, totalCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents a user who is a collaborator of a repository.""")
>  >  >  Name
>  >  >  >  token(T_NAME, RepositoryCollaboratorEdge)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, cursor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, node)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, User)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The permission the user has on the repository.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, permission)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, RepositoryPermission)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """A list of repositories owned by the subject.""")
>  >  >  Name
>  >  >  >  token(T_NAME, RepositoryConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of edges.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, edges)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, RepositoryEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of nodes.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nodes)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Repository)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Information to aid in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pageInfo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PageInfo)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the total count of items in the connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, totalCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The total size in kilobytes of all repositories in the connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, totalDiskUsage)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  EnumDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The reason a repository is listed as 'contributed'.""")
>  >  >  Name
>  >  >  >  token(T_NAME, RepositoryContributionType)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Created a commit""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, COMMIT)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Created an issue""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, ISSUE)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Created a pull request""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, PULL_REQUEST)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Created the repository""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, REPOSITORY)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Reviewed a pull request""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, PULL_REQUEST_REVIEW)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An edge in a connection.""")
>  >  >  Name
>  >  >  >  token(T_NAME, RepositoryEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A cursor for use in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, cursor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The item at the end of the edge.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, node)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Repository)
>  >  InterfaceDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """A subset of repository info.""")
>  >  >  Name
>  >  >  >  token(T_NAME, RepositoryInfo)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The description of the repository.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, description)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The description of the repository rendered to HTML.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, descriptionHTML)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, HTML)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Returns how many forks there are of this repository in the whole network.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, forkCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Indicates if the repository has issues feature enabled.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, hasIssuesEnabled)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Indicates if the repository has wiki feature enabled.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, hasWikiEnabled)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The repository's URL.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, homepageUrl)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Indicates if the repository is unmaintained.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, isArchived)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies if the repository is a fork.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, isFork)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Indicates if the repository has been locked or not.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, isLocked)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies if the repository is a mirror.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, isMirror)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies if the repository is private.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, isPrivate)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The license associated with the repository""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, license)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "Use Repository.licenseInfo instead.")
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The license associated with the repository""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, licenseInfo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, License)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The reason the repository has been locked.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, lockReason)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, RepositoryLockReason)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The repository's original mirror URL.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, mirrorUrl)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The name of the repository.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, name)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The repository's name with owner.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nameWithOwner)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The User owner of the repository.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, owner)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, RepositoryOwner)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies when the repository was last pushed to.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pushedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP path for this repository""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, resourcePath)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    A description of the repository, rendered to HTML without any links in it.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, shortDescriptionHTML)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """How many characters to return.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, limit)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  Value
>  >  >  >  >  >  token(T_NUMBER_VALUE, 200)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, HTML)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was last updated.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, updatedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "General type updated timestamps will eventually be replaced by other field specific timestamps.")
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP URL for this repository""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, url)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An invitation for a user to be added to a repository.""")
>  >  >  Name
>  >  >  >  token(T_NAME, RepositoryInvitation)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The user who received the invitation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, invitee)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, User)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The user who created the invitation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, inviter)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, User)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The Repository the user is invited to.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, repository)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, RepositoryInvitationRepository)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """A subset of repository info shared with potential collaborators.""")
>  >  >  Name
>  >  >  >  token(T_NAME, RepositoryInvitationRepository)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, RepositoryInfo)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The description of the repository.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, description)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The description of the repository rendered to HTML.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, descriptionHTML)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, HTML)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Returns how many forks there are of this repository in the whole network.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, forkCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Indicates if the repository has issues feature enabled.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, hasIssuesEnabled)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Indicates if the repository has wiki feature enabled.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, hasWikiEnabled)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The repository's URL.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, homepageUrl)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Indicates if the repository is unmaintained.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, isArchived)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies if the repository is a fork.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, isFork)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Indicates if the repository has been locked or not.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, isLocked)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies if the repository is a mirror.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, isMirror)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies if the repository is private.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, isPrivate)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The license associated with the repository""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, license)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "Use Repository.licenseInfo instead.")
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The license associated with the repository""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, licenseInfo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, License)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The reason the repository has been locked.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, lockReason)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, RepositoryLockReason)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The repository's original mirror URL.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, mirrorUrl)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The name of the repository.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, name)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The repository's name with owner.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nameWithOwner)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    The owner of the repository associated with this invitation repository.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, owner)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, RepositoryOwner)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies when the repository was last pushed to.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pushedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP path for this repository""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, resourcePath)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    A description of the repository, rendered to HTML without any links in it.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, shortDescriptionHTML)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """How many characters to return.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, limit)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  Value
>  >  >  >  >  >  token(T_NUMBER_VALUE, 200)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, HTML)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was last updated.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, updatedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "General type updated timestamps will eventually be replaced by other field specific timestamps.")
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP URL for this repository""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, url)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  EnumDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The possible reasons a given repository could be in a locked state.""")
>  >  >  Name
>  >  >  >  token(T_NAME, RepositoryLockReason)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The repository is locked due to a move.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, MOVING)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The repository is locked due to a billing related reason.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, BILLING)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The repository is locked due to a rename.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, RENAME)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The repository is locked due to a migration.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, MIGRATING)
>  >  InterfaceDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents a object that belongs to a repository.""")
>  >  >  Name
>  >  >  >  token(T_NAME, RepositoryNode)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The repository associated with this node.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, repository)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Repository)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  InputDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Ordering options for repository connections""")
>  >  >  Name
>  >  >  >  token(T_NAME, RepositoryOrder)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The field to order repositories by.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, field)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, RepositoryOrderField)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The ordering direction.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, direction)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, OrderDirection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  EnumDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Properties by which repository connections can be ordered.""")
>  >  >  Name
>  >  >  >  token(T_NAME, RepositoryOrderField)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Order repositories by creation time""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, CREATED_AT)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Order repositories by update time""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, UPDATED_AT)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Order repositories by push time""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, PUSHED_AT)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Order repositories by name""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, NAME)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Order repositories by number of stargazers""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, STARGAZERS)
>  >  InterfaceDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents an owner of a Repository.""")
>  >  >  Name
>  >  >  >  token(T_NAME, RepositoryOwner)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A URL pointing to the owner's public avatar.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, avatarUrl)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """The size of the resulting square image.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, size)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The username used to login.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, login)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of repositories this user has pinned to their profile""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pinnedRepositories)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """If non-null, filters repositories according to privacy""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, privacy)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, RepositoryPrivacy)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Ordering options for repositories returned from the connection""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, orderBy)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, RepositoryOrder)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Affiliation options for repositories returned from the connection""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, affiliations)
>  >  >  >  >  List
>  >  >  >  >  >  Type
>  >  >  >  >  >  >  token(T_NAME, RepositoryAffiliation)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        If non-null, filters repositories according to whether they have been locked
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, isLocked)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, RepositoryConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of repositories that the user owns.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, repositories)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """If non-null, filters repositories according to privacy""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, privacy)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, RepositoryPrivacy)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Ordering options for repositories returned from the connection""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, orderBy)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, RepositoryOrder)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Affiliation options for repositories returned from the connection""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, affiliations)
>  >  >  >  >  List
>  >  >  >  >  >  Type
>  >  >  >  >  >  >  token(T_NAME, RepositoryAffiliation)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        If non-null, filters repositories according to whether they have been locked
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, isLocked)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        If non-null, filters repositories according to whether they are forks of another repository
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, isFork)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, RepositoryConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Find Repository.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, repository)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Name of Repository to find.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, name)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Repository)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP URL for the owner.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, resourcePath)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP URL for the owner.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, url)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  EnumDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The access level to a repository""")
>  >  >  Name
>  >  >  >  token(T_NAME, RepositoryPermission)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Can read, clone, push, and add collaborators""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, ADMIN)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Can read, clone and push""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, WRITE)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Can read and clone""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, READ)
>  >  EnumDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The privacy of a repository""")
>  >  >  Name
>  >  >  >  token(T_NAME, RepositoryPrivacy)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Public""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, PUBLIC)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Private""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, PRIVATE)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """A repository-topic connects a repository to a topic.""")
>  >  >  Name
>  >  >  >  token(T_NAME, RepositoryTopic)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, UniformResourceLocatable)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP path for this repository-topic.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, resourcePath)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The topic.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, topic)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Topic)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP URL for this repository-topic.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, url)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The connection type for RepositoryTopic.""")
>  >  >  Name
>  >  >  >  token(T_NAME, RepositoryTopicConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of edges.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, edges)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, RepositoryTopicEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of nodes.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nodes)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, RepositoryTopic)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Information to aid in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pageInfo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PageInfo)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the total count of items in the connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, totalCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An edge in a connection.""")
>  >  >  Name
>  >  >  >  token(T_NAME, RepositoryTopicEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A cursor for use in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, cursor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The item at the end of the edge.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, node)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, RepositoryTopic)
>  >  UnionDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Types that can be requested reviewers.""")
>  >  >  Name
>  >  >  >  token(T_NAME, RequestedReviewer)
>  >  >  Relations
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, User)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Team)
>  >  InputDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated input type of RequestReviews""")
>  >  >  Name
>  >  >  >  token(T_NAME, RequestReviewsInput)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The Node ID of the pull request to modify.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pullRequestId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The Node IDs of the user to request.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, userIds)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The Node IDs of the team to request.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, teamIds)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Add users to the set rather than replace.""")
>  >  >  >  Name
>  >  >  >  >  token(T_UNION, union)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated return type of RequestReviews""")
>  >  >  Name
>  >  >  >  token(T_NAME, RequestReviewsPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The pull request that is getting requests.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pullRequest)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PullRequest)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The edge from the pull request to the requested reviewers.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, requestedReviewersEdge)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, UserEdge)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """
A team or user who has the ability to dismiss a review on a protected branch.
""")
>  >  >  Name
>  >  >  >  token(T_NAME, ReviewDismissalAllowance)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The actor that can dismiss.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, actor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ReviewDismissalAllowanceActor)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Identifies the protected branch associated with the allowed user or team.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, protectedBranch)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ProtectedBranch)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  UnionDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Types that can be an actor.""")
>  >  >  Name
>  >  >  >  token(T_NAME, ReviewDismissalAllowanceActor)
>  >  >  Relations
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, User)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Team)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The connection type for ReviewDismissalAllowance.""")
>  >  >  Name
>  >  >  >  token(T_NAME, ReviewDismissalAllowanceConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of edges.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, edges)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, ReviewDismissalAllowanceEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of nodes.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nodes)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, ReviewDismissalAllowance)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Information to aid in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pageInfo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PageInfo)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the total count of items in the connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, totalCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An edge in a connection.""")
>  >  >  Name
>  >  >  >  token(T_NAME, ReviewDismissalAllowanceEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A cursor for use in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, cursor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The item at the end of the edge.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, node)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ReviewDismissalAllowance)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """
Represents a 'review_dismissed' event on a given issue or pull request.
""")
>  >  >  Name
>  >  >  >  token(T_NAME, ReviewDismissedEvent)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, UniformResourceLocatable)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the actor who performed the event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, actor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the primary key from the database.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, databaseId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "Exposed database IDs will eventually be removed in favor of global Relay IDs.")
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the message associated with the 'review_dismissed' event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, message)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The message associated with the event, rendered to HTML.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, messageHtml)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, HTML)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Identifies the previous state of the review with the 'review_dismissed' event.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, previousReviewState)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PullRequestReviewState)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """PullRequest referenced by event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pullRequest)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PullRequest)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the commit which caused the review to become stale.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pullRequestCommit)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PullRequestCommit)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP path for this review dismissed event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, resourcePath)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the review associated with the 'review_dismissed' event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, review)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PullRequestReview)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP URL for this review dismissed event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, url)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """A request for a user to review a pull request.""")
>  >  >  Name
>  >  >  >  token(T_NAME, ReviewRequest)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the primary key from the database.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, databaseId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "Exposed database IDs will eventually be removed in favor of global Relay IDs.")
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the pull request associated with this review request.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pullRequest)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PullRequest)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The reviewer that is requested.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, requestedReviewer)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, RequestedReviewer)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the author associated with this review request.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, reviewer)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, User)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "Use `ReviewRequest.requestedReviewer` instead.")
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The connection type for ReviewRequest.""")
>  >  >  Name
>  >  >  >  token(T_NAME, ReviewRequestConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of edges.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, edges)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, ReviewRequestEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of nodes.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nodes)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, ReviewRequest)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Information to aid in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pageInfo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PageInfo)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the total count of items in the connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, totalCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents an 'review_requested' event on a given pull request.""")
>  >  >  Name
>  >  >  >  token(T_NAME, ReviewRequestedEvent)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the actor who performed the event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, actor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """PullRequest referenced by event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pullRequest)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PullRequest)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the reviewer whose review was requested.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, requestedReviewer)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, RequestedReviewer)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the user whose review was requested.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, subject)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, User)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "Use `ReviewRequestedEvent.requestedReviewer` instead.")
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An edge in a connection.""")
>  >  >  Name
>  >  >  >  token(T_NAME, ReviewRequestEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A cursor for use in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, cursor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The item at the end of the edge.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, node)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ReviewRequest)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents an 'review_request_removed' event on a given pull request.""")
>  >  >  Name
>  >  >  >  token(T_NAME, ReviewRequestRemovedEvent)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the actor who performed the event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, actor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """PullRequest referenced by event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pullRequest)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PullRequest)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the reviewer whose review request was removed.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, requestedReviewer)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, RequestedReviewer)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the user whose review request was removed.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, subject)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, User)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "Use ReviewRequestRemovedEvent.requestedReviewer instead.")
>  >  UnionDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The results of a search.""")
>  >  >  Name
>  >  >  >  token(T_NAME, SearchResultItem)
>  >  >  Relations
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Issue)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, PullRequest)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Repository)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, User)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Organization)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, MarketplaceListing)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """A list of results that matched against a search query.""")
>  >  >  Name
>  >  >  >  token(T_NAME, SearchResultItemConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The number of pieces of code that matched the search query.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, codeCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of edges.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, edges)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, SearchResultItemEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The number of issues that matched the search query.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, issueCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of nodes.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nodes)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, SearchResultItem)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Information to aid in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pageInfo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PageInfo)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The number of repositories that matched the search query.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, repositoryCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The number of users that matched the search query.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, userCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The number of wiki pages that matched the search query.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, wikiCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An edge in a connection.""")
>  >  >  Name
>  >  >  >  token(T_NAME, SearchResultItemEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A cursor for use in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, cursor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The item at the end of the edge.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, node)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, SearchResultItem)
>  >  EnumDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents the individual results of a search.""")
>  >  >  Name
>  >  >  >  token(T_NAME, SearchType)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Returns results matching issues in repositories.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, ISSUE)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Returns results matching repositories.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, REPOSITORY)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Returns results matching users and organizations on GitHub.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, USER)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents an S/MIME signature on a Commit or Tag.""")
>  >  >  Name
>  >  >  >  token(T_NAME, SmimeSignature)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, GitSignature)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Email used to sign this object.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, email)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """True if the signature is valid and verified by GitHub.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, isValid)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Payload for GPG signing object. Raw ODB object without the signature header.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, payload)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """ASCII-armored signature header from object.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, signature)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """GitHub user corresponding to the email signing this commit.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, signer)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, User)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    The state of this signature. `VALID` if signature is valid and verified by
    GitHub, otherwise represents reason why signature is considered invalid.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, state)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, GitSignatureState)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The connection type for User.""")
>  >  >  Name
>  >  >  >  token(T_NAME, StargazerConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of edges.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, edges)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, StargazerEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of nodes.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nodes)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, User)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Information to aid in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pageInfo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PageInfo)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the total count of items in the connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, totalCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents a user that's starred a repository.""")
>  >  >  Name
>  >  >  >  token(T_NAME, StargazerEdge)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, cursor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, node)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, User)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies when the item was starred.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, starredAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  InputDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Ways in which star connections can be ordered.""")
>  >  >  Name
>  >  >  >  token(T_NAME, StarOrder)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The field in which to order nodes by.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, field)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, StarOrderField)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The direction in which to order nodes.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, direction)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, OrderDirection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  EnumDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Properties by which star connections can be ordered.""")
>  >  >  Name
>  >  >  >  token(T_NAME, StarOrderField)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Allows ordering a list of stars by when they were created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, STARRED_AT)
>  >  InterfaceDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Things that can be starred.""")
>  >  >  Name
>  >  >  >  token(T_NAME, Starrable)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of users who have starred this starrable.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, stargazers)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Order for connection""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, orderBy)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, StarOrder)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, StargazerConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Returns a boolean indicating whether the viewing user has starred this starrable.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerHasStarred)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The connection type for Repository.""")
>  >  >  Name
>  >  >  >  token(T_NAME, StarredRepositoryConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of edges.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, edges)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, StarredRepositoryEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of nodes.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nodes)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Repository)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Information to aid in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pageInfo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PageInfo)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the total count of items in the connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, totalCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents a starred repository.""")
>  >  >  Name
>  >  >  >  token(T_NAME, StarredRepositoryEdge)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, cursor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, node)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Repository)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies when the item was starred.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, starredAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents a commit status.""")
>  >  >  Name
>  >  >  >  token(T_NAME, Status)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The commit this status is attached to.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, commit)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Commit)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Looks up an individual status context by context name.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, context)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """The context name.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, name)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, StatusContext)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The individual status contexts for this commit.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, contexts)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, StatusContext)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The combined commit status.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, state)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, StatusState)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents an individual commit status context""")
>  >  >  Name
>  >  >  >  token(T_NAME, StatusContext)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """This commit this status context is attached to.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, commit)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Commit)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The name of this status context.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, context)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The actor who created this status context.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, creator)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The description for this status context.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, description)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The state of this status context.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, state)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, StatusState)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The URL for this status context.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, targetUrl)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  EnumDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The possible commit status states.""")
>  >  >  Name
>  >  >  >  token(T_NAME, StatusState)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Status is expected.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, EXPECTED)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Status is errored.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, ERROR)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Status is failing.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, FAILURE)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Status is pending.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, PENDING)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Status is successful.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, SUCCESS)
>  >  InputDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated input type of SubmitPullRequestReview""")
>  >  >  Name
>  >  >  >  token(T_NAME, SubmitPullRequestReviewInput)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The Pull Request Review ID to submit.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pullRequestReviewId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The event to send to the Pull Request Review.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, event)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PullRequestReviewEvent)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The text field to set on the Pull Request Review.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, body)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated return type of SubmitPullRequestReview""")
>  >  >  Name
>  >  >  >  token(T_NAME, SubmitPullRequestReviewPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The submitted pull request review.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pullRequestReview)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PullRequestReview)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  InterfaceDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Entities that can be subscribed to for web and email notifications.""")
>  >  >  Name
>  >  >  >  token(T_NAME, Subscribable)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Check if the viewer is able to change their subscription status for the repository.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCanSubscribe)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerSubscription)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, SubscriptionState)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents a 'subscribed' event on a given `Subscribable`.""")
>  >  >  Name
>  >  >  >  token(T_NAME, SubscribedEvent)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the actor who performed the event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, actor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Object referenced by event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, subscribable)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Subscribable)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  EnumDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The possible states of a subscription.""")
>  >  >  Name
>  >  >  >  token(T_NAME, SubscriptionState)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The User is only notified when particpating or @mentioned.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, UNSUBSCRIBED)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The User is notified of all conversations.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, SUBSCRIBED)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The User is never notified.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, IGNORED)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Subscriptions are currently unavailable""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, UNAVAILABLE)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """
A suggestion to review a pull request based on a user's commit history and review comments.
""")
>  >  >  Name
>  >  >  >  token(T_NAME, SuggestedReviewer)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Is this suggestion based on past commits?""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, isAuthor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Is this suggestion based on past review comments?""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, isCommenter)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the user suggested to review the pull request.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, reviewer)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, User)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents a Git tag.""")
>  >  >  Name
>  >  >  >  token(T_NAME, Tag)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, GitObject)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """An abbreviated version of the Git object ID""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, abbreviatedOid)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP path for this Git object""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, commitResourcePath)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP URL for this Git object""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, commitUrl)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The Git tag message.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, message)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The Git tag name.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, name)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The Git object ID""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, oid)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, GitObjectID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The Repository the Git object belongs to""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, repository)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Repository)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Details about the tag author.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, tagger)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, GitActor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The Git object the tag points to.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, target)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, GitObject)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """A team of users in an organization.""")
>  >  >  Name
>  >  >  >  token(T_NAME, Team)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Subscribable)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of teams that are ancestors of this team.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, ancestors)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, TeamConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """List of child teams belonging to this team""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, childTeams)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Order for connection""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, orderBy)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, TeamOrder)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """User logins to filter by""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, userLogins)
>  >  >  >  >  List
>  >  >  >  >  >  Type
>  >  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Whether to list immediate child teams or all descendant child teams.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, immediateOnly)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  Value
>  >  >  >  >  >  token(T_BOOL_TRUE, true)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, TeamConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The slug corresponding to the organization and team.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, combinedSlug)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The description of the team.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, description)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP path for editing this team""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, editTeamResourcePath)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP URL for editing this team""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, editTeamUrl)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of pending invitations for users to this team""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, invitations)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, OrganizationInvitationConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of users who are members of this team.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, members)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """The search string to look for.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_SCHEMA_QUERY, query)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Filter by membership type""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, membership)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, TeamMembershipType)
>  >  >  >  >  Value
>  >  >  >  >  >  token(T_NAME, ALL)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Filter by team member role""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, role)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, TeamMemberRole)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, TeamMemberConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP path for the team' members""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, membersResourcePath)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP URL for the team' members""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, membersUrl)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The name of the team.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, name)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP path creating a new team""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, newTeamResourcePath)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP URL creating a new team""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, newTeamUrl)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The organization that owns this team.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, organization)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Organization)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The parent team of the team.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, parentTeam)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Team)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The level of privacy the team has.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, privacy)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, TeamPrivacy)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of repositories this team has access to.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, repositories)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """The search string to look for.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_SCHEMA_QUERY, query)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Order for the connection.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, orderBy)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, TeamRepositoryOrder)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, TeamRepositoryConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP path for this team's repositories""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, repositoriesResourcePath)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP URL for this team's repositories""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, repositoriesUrl)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP path for this team""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, resourcePath)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The slug corresponding to the team.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, slug)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP path for this team's teams""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, teamsResourcePath)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP URL for this team's teams""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, teamsUrl)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was last updated.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, updatedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "General type updated timestamps will eventually be replaced by other field specific timestamps.")
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP URL for this team""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, url)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Team is adminable by the viewer.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCanAdminister)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Check if the viewer is able to change their subscription status for the repository.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCanSubscribe)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerSubscription)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, SubscriptionState)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The connection type for Team.""")
>  >  >  Name
>  >  >  >  token(T_NAME, TeamConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of edges.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, edges)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, TeamEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of nodes.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nodes)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Team)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Information to aid in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pageInfo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PageInfo)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the total count of items in the connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, totalCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An edge in a connection.""")
>  >  >  Name
>  >  >  >  token(T_NAME, TeamEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A cursor for use in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, cursor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The item at the end of the edge.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, node)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Team)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The connection type for User.""")
>  >  >  Name
>  >  >  >  token(T_NAME, TeamMemberConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of edges.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, edges)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, TeamMemberEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of nodes.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nodes)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, User)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Information to aid in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pageInfo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PageInfo)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the total count of items in the connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, totalCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents a user who is a member of a team.""")
>  >  >  Name
>  >  >  >  token(T_NAME, TeamMemberEdge)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, cursor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP path to the organization's member access page.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, memberAccessResourcePath)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP URL to the organization's member access page.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, memberAccessUrl)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, node)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, User)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The role the member has on the team.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, role)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, TeamMemberRole)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  EnumDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The possible team member roles; either 'maintainer' or 'member'.""")
>  >  >  Name
>  >  >  >  token(T_NAME, TeamMemberRole)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A team maintainer has permission to add and remove team members.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, MAINTAINER)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A team member has no administrative permissions on the team.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, MEMBER)
>  >  EnumDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """
Defines which types of team members are included in the returned list. Can be one of IMMEDIATE, CHILD_TEAM or ALL.
""")
>  >  >  Name
>  >  >  >  token(T_NAME, TeamMembershipType)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Includes only immediate members of the team.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, IMMEDIATE)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Includes only child team members for the team.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, CHILD_TEAM)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Includes immediate and child team members for the team.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, ALL)
>  >  InputDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Ways in which team connections can be ordered.""")
>  >  >  Name
>  >  >  >  token(T_NAME, TeamOrder)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The field in which to order nodes by.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, field)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, TeamOrderField)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The direction in which to order nodes.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, direction)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, OrderDirection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  EnumDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Properties by which team connections can be ordered.""")
>  >  >  Name
>  >  >  >  token(T_NAME, TeamOrderField)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Allows ordering a list of teams by name.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, NAME)
>  >  EnumDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The possible team privacy values.""")
>  >  >  Name
>  >  >  >  token(T_NAME, TeamPrivacy)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A secret team can only be seen by its members.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, SECRET)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    A visible team can be seen and @mentioned by every member of the organization.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, VISIBLE)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The connection type for Repository.""")
>  >  >  Name
>  >  >  >  token(T_NAME, TeamRepositoryConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of edges.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, edges)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, TeamRepositoryEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of nodes.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nodes)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Repository)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Information to aid in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pageInfo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PageInfo)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the total count of items in the connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, totalCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents a team repository.""")
>  >  >  Name
>  >  >  >  token(T_NAME, TeamRepositoryEdge)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, cursor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, node)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Repository)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The permission level the team has on the repository""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, permission)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, RepositoryPermission)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  InputDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Ordering options for team repository connections""")
>  >  >  Name
>  >  >  >  token(T_NAME, TeamRepositoryOrder)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The field to order repositories by.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, field)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, TeamRepositoryOrderField)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The ordering direction.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, direction)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, OrderDirection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  EnumDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Properties by which team repository connections can be ordered.""")
>  >  >  Name
>  >  >  >  token(T_NAME, TeamRepositoryOrderField)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Order repositories by creation time""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, CREATED_AT)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Order repositories by update time""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, UPDATED_AT)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Order repositories by push time""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, PUSHED_AT)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Order repositories by name""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, NAME)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Order repositories by permission""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, PERMISSION)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Order repositories by number of stargazers""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, STARGAZERS)
>  >  EnumDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The role of a user on a team.""")
>  >  >  Name
>  >  >  >  token(T_NAME, TeamRole)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """User has admin rights on the team.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, ADMIN)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """User is a member of the team.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, MEMBER)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """A topic aggregates entities that are related to a subject.""")
>  >  >  Name
>  >  >  >  token(T_NAME, Topic)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The topic's name.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, name)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    A list of related topics, including aliases of this topic, sorted with the most relevant
    first.

    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, relatedTopics)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Topic)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The connection type for Topic.""")
>  >  >  Name
>  >  >  >  token(T_NAME, TopicConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of edges.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, edges)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, TopicEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of nodes.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nodes)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Topic)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Information to aid in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pageInfo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PageInfo)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the total count of items in the connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, totalCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An edge in a connection.""")
>  >  >  Name
>  >  >  >  token(T_NAME, TopicEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A cursor for use in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, cursor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The item at the end of the edge.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, node)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Topic)
>  >  EnumDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Reason that the suggested topic is declined.""")
>  >  >  Name
>  >  >  >  token(T_NAME, TopicSuggestionDeclineReason)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The suggested topic is not relevant to the repository.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, NOT_RELEVANT)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    The suggested topic is too specific for the repository (e.g. #ruby-on-rails-version-4-2-1).
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, TOO_SPECIFIC)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The viewer does not like the suggested topic.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, PERSONAL_PREFERENCE)
>  >  >  Value
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The suggested topic is too general for the repository.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, TOO_GENERAL)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents a Git tree.""")
>  >  >  Name
>  >  >  >  token(T_NAME, Tree)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, GitObject)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """An abbreviated version of the Git object ID""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, abbreviatedOid)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP path for this Git object""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, commitResourcePath)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP URL for this Git object""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, commitUrl)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of tree entries.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, entries)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, TreeEntry)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The Git object ID""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, oid)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, GitObjectID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The Repository the Git object belongs to""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, repository)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Repository)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents a Git tree entry.""")
>  >  >  Name
>  >  >  >  token(T_NAME, TreeEntry)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Entry file mode.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, mode)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Entry file name.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, name)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Entry file object.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, object)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, GitObject)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Entry file Git object ID.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, oid)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, GitObjectID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The Repository the tree entry belongs to""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, repository)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Repository)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Entry file type.""")
>  >  >  >  Name
>  >  >  >  >  token(T_TYPE, type)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents an 'unassigned' event on any assignable object.""")
>  >  >  Name
>  >  >  >  token(T_NAME, UnassignedEvent)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the actor who performed the event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, actor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the assignable associated with the event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, assignable)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Assignable)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the subject (user) who was unassigned.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, user)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, User)
>  >  InterfaceDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents a type that can be retrieved by a URL.""")
>  >  >  Name
>  >  >  >  token(T_NAME, UniformResourceLocatable)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTML path to this resource.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, resourcePath)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The URL to this resource.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, url)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents an unknown signature on a Commit or Tag.""")
>  >  >  Name
>  >  >  >  token(T_NAME, UnknownSignature)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, GitSignature)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Email used to sign this object.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, email)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """True if the signature is valid and verified by GitHub.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, isValid)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Payload for GPG signing object. Raw ODB object without the signature header.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, payload)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """ASCII-armored signature header from object.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, signature)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """GitHub user corresponding to the email signing this commit.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, signer)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, User)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    The state of this signature. `VALID` if signature is valid and verified by
    GitHub, otherwise represents reason why signature is considered invalid.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, state)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, GitSignatureState)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents an 'unlabeled' event on a given issue or pull request.""")
>  >  >  Name
>  >  >  >  token(T_NAME, UnlabeledEvent)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the actor who performed the event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, actor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the label associated with the 'unlabeled' event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, label)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Label)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the `Labelable` associated with the event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, labelable)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Labelable)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents an 'unlocked' event on a given issue or pull request.""")
>  >  >  Name
>  >  >  >  token(T_NAME, UnlockedEvent)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the actor who performed the event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, actor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Object that was unlocked.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, lockable)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Lockable)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Represents an 'unsubscribed' event on a given `Subscribable`.""")
>  >  >  Name
>  >  >  >  token(T_NAME, UnsubscribedEvent)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the actor who performed the event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, actor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Object referenced by event.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, subscribable)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Subscribable)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  InterfaceDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Entities that can be updated.""")
>  >  >  Name
>  >  >  >  token(T_NAME, Updatable)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Check if the current viewer can update this object.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCanUpdate)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  InterfaceDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Comments that can be updated.""")
>  >  >  Name
>  >  >  >  token(T_NAME, UpdatableComment)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Reasons why the current viewer can not update this comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCannotUpdateReasons)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, CommentCannotUpdateReason)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  InputDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated input type of UpdateProjectCard""")
>  >  >  Name
>  >  >  >  token(T_NAME, UpdateProjectCardInput)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The ProjectCard ID to update.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, projectCardId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The note of ProjectCard.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, note)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated return type of UpdateProjectCard""")
>  >  >  Name
>  >  >  >  token(T_NAME, UpdateProjectCardPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The updated ProjectCard.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, projectCard)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ProjectCard)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  InputDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated input type of UpdateProjectColumn""")
>  >  >  Name
>  >  >  >  token(T_NAME, UpdateProjectColumnInput)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The ProjectColumn ID to update.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, projectColumnId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The name of project column.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, name)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated return type of UpdateProjectColumn""")
>  >  >  Name
>  >  >  >  token(T_NAME, UpdateProjectColumnPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The updated project column.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, projectColumn)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ProjectColumn)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  InputDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated input type of UpdateProject""")
>  >  >  Name
>  >  >  >  token(T_NAME, UpdateProjectInput)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The Project ID to update.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, projectId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The name of project.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, name)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The description of project.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, body)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Whether the project is open or closed.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, state)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ProjectState)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Whether the project is public or not.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, public)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated return type of UpdateProject""")
>  >  >  Name
>  >  >  >  token(T_NAME, UpdateProjectPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The updated project.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, project)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Project)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  InputDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated input type of UpdatePullRequestReviewComment""")
>  >  >  Name
>  >  >  >  token(T_NAME, UpdatePullRequestReviewCommentInput)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The Node ID of the comment to modify.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pullRequestReviewCommentId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The text of the comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, body)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated return type of UpdatePullRequestReviewComment""")
>  >  >  Name
>  >  >  >  token(T_NAME, UpdatePullRequestReviewCommentPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The updated comment.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pullRequestReviewComment)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PullRequestReviewComment)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  InputDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated input type of UpdatePullRequestReview""")
>  >  >  Name
>  >  >  >  token(T_NAME, UpdatePullRequestReviewInput)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The Node ID of the pull request review to modify.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pullRequestReviewId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The contents of the pull request review body.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, body)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated return type of UpdatePullRequestReview""")
>  >  >  Name
>  >  >  >  token(T_NAME, UpdatePullRequestReviewPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The updated pull request review.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pullRequestReview)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PullRequestReview)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  InputDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated input type of UpdateSubscription""")
>  >  >  Name
>  >  >  >  token(T_NAME, UpdateSubscriptionInput)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The Node ID of the subscribable object to modify.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, subscribableId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The new state of the subscription.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, state)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, SubscriptionState)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated return type of UpdateSubscription""")
>  >  >  Name
>  >  >  >  token(T_NAME, UpdateSubscriptionPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The input subscribable entity.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, subscribable)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Subscribable)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  InputDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated input type of UpdateTopics""")
>  >  >  Name
>  >  >  >  token(T_NAME, UpdateTopicsInput)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The Node ID of the repository.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, repositoryId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Argument
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """An array of topic names.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, topicNames)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """Autogenerated return type of UpdateTopics""")
>  >  >  Name
>  >  >  >  token(T_NAME, UpdateTopicsPayload)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A unique identifier for the client performing the mutation.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, clientMutationId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Names of the provided topics that are not valid.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, invalidTopicNames)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The updated repository.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, repository)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Repository)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ScalarDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.""")
>  >  >  Name
>  >  >  >  token(T_NAME, URI)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """
A user is an individual's account on GitHub that owns repositories and can make new content.
""")
>  >  >  Name
>  >  >  >  token(T_NAME, User)
>  >  >  Implements
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Node)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A URL pointing to the user's public avatar.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, avatarUrl)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """The size of the resulting square image.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, size)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The user's public profile bio.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, bio)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The user's public profile bio as HTML.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, bioHTML)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, HTML)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of commit comments made by this user.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, commitComments)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, CommitCommentConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The user's public profile company.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, company)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The user's public profile company as HTML.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, companyHTML)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, HTML)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of repositories that the user recently contributed to.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, contributedRepositories)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """If non-null, filters repositories according to privacy""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, privacy)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, RepositoryPrivacy)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Ordering options for repositories returned from the connection""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, orderBy)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, RepositoryOrder)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Affiliation options for repositories returned from the connection""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, affiliations)
>  >  >  >  >  List
>  >  >  >  >  >  Type
>  >  >  >  >  >  >  token(T_NAME, RepositoryAffiliation)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        If non-null, filters repositories according to whether they have been locked
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, isLocked)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, RepositoryConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "Use repositoriesContributedTo instead.")
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the primary key from the database.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, databaseId)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "Exposed database IDs will eventually be removed in favor of global Relay IDs.")
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The user's publicly visible profile email.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, email)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of users the given user is followed by.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, followers)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, FollowerConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of users the given user is following.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, following)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, FollowingConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Find gist by repo name.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, gist)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """The gist name to find.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, name)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Gist)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of gist comments made by this user.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, gistComments)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, GistCommentConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of the Gists the user has created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, gists)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Filters Gists according to privacy.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, privacy)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, GistPrivacy)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Ordering options for gists returned from the connection""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, orderBy)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, GistOrder)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, GistConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Whether or not this user is a participant in the GitHub Security Bug Bounty.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, isBountyHunter)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """
    Whether or not this user is a participant in the GitHub Campus Experts Program.
    """)
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, isCampusExpert)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Whether or not this user is a GitHub Developer Program member.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, isDeveloperProgramMember)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Whether or not this user is a GitHub employee.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, isEmployee)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Whether or not the user has marked themselves as for hire.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, isHireable)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Whether or not this user is a site administrator.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, isSiteAdmin)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Whether or not this user is the viewing user.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, isViewer)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of issue comments made by this user.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, issueComments)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, IssueCommentConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of issues assocated with this user.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, issues)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """A list of label names to filter the pull requests by.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, labels)
>  >  >  >  >  List
>  >  >  >  >  >  Type
>  >  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Ordering options for issues returned from the connection.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, orderBy)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, IssueOrder)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """A list of states to filter the issues by.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, states)
>  >  >  >  >  List
>  >  >  >  >  >  Type
>  >  >  >  >  >  >  token(T_NAME, IssueState)
>  >  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, IssueConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The user's public profile location.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, location)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The username used to login.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, login)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The user's public profile name.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, name)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Find an organization by its login that the user belongs to.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, organization)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """The login of the organization to find.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, login)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Organization)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of organizations the user belongs to.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, organizations)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, OrganizationConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of repositories this user has pinned to their profile""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pinnedRepositories)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """If non-null, filters repositories according to privacy""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, privacy)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, RepositoryPrivacy)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Ordering options for repositories returned from the connection""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, orderBy)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, RepositoryOrder)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Affiliation options for repositories returned from the connection""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, affiliations)
>  >  >  >  >  List
>  >  >  >  >  >  Type
>  >  >  >  >  >  >  token(T_NAME, RepositoryAffiliation)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        If non-null, filters repositories according to whether they have been locked
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, isLocked)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, RepositoryConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of public keys associated with this user.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, publicKeys)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PublicKeyConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of pull requests assocated with this user.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pullRequests)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """A list of states to filter the pull requests by.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, states)
>  >  >  >  >  List
>  >  >  >  >  >  Type
>  >  >  >  >  >  >  token(T_NAME, PullRequestState)
>  >  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """A list of label names to filter the pull requests by.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, labels)
>  >  >  >  >  List
>  >  >  >  >  >  Type
>  >  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """The head ref name to filter the pull requests by.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, headRefName)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """The base ref name to filter the pull requests by.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, baseRefName)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Ordering options for pull requests returned from the connection.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, orderBy)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, IssueOrder)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PullRequestConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of repositories that the user owns.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, repositories)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """If non-null, filters repositories according to privacy""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, privacy)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, RepositoryPrivacy)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Ordering options for repositories returned from the connection""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, orderBy)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, RepositoryOrder)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Affiliation options for repositories returned from the connection""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, affiliations)
>  >  >  >  >  List
>  >  >  >  >  >  Type
>  >  >  >  >  >  >  token(T_NAME, RepositoryAffiliation)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        If non-null, filters repositories according to whether they have been locked
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, isLocked)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        If non-null, filters repositories according to whether they are forks of another repository
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, isFork)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, RepositoryConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of repositories that the user recently contributed to.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, repositoriesContributedTo)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """If non-null, filters repositories according to privacy""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, privacy)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, RepositoryPrivacy)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Ordering options for repositories returned from the connection""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, orderBy)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, RepositoryOrder)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        If non-null, filters repositories according to whether they have been locked
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, isLocked)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """If true, include user repositories""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, includeUserRepositories)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        If non-null, include only the specified types of contributions. The
        GitHub.com UI uses [COMMIT, ISSUE, PULL_REQUEST, REPOSITORY]
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, contributionTypes)
>  >  >  >  >  List
>  >  >  >  >  >  Type
>  >  >  >  >  >  >  token(T_NAME, RepositoryContributionType)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, RepositoryConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Find Repository.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, repository)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Name of Repository to find.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, name)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Repository)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP path for this user""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, resourcePath)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Repositories the user has starred.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, starredRepositories)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Filters starred repositories to only return repositories owned by the viewer.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, ownedByViewer)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Order for connection""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, orderBy)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, StarOrder)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, StarredRepositoryConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was last updated.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, updatedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "General type updated timestamps will eventually be replaced by other field specific timestamps.")
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The HTTP URL for this user""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, url)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Whether or not the viewer is able to follow the user.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerCanFollow)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Whether or not this user is followed by the viewer.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, viewerIsFollowing)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of repositories the given user is watching.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, watching)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the first _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, first)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come after the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, after)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Returns the last _n_ elements from the list.""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, last)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Int)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        Returns the elements in the list that come before the specified global ID.
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, before)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, String)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """If non-null, filters repositories according to privacy""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, privacy)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, RepositoryPrivacy)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Ordering options for repositories returned from the connection""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, orderBy)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, RepositoryOrder)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """Affiliation options for repositories returned from the connection""")
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, affiliations)
>  >  >  >  >  List
>  >  >  >  >  >  Type
>  >  >  >  >  >  >  token(T_NAME, RepositoryAffiliation)
>  >  >  >  Argument
>  >  >  >  >  Description
>  >  >  >  >  >  token(T_MULTILINE_STRING, """
        If non-null, filters repositories according to whether they have been locked
        """)
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, isLocked)
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, Boolean)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, RepositoryConnection)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A URL pointing to the user's public website/blog.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, websiteUrl)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, URI)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """The connection type for User.""")
>  >  >  Name
>  >  >  >  token(T_NAME, UserConnection)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of edges.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, edges)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, UserEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A list of nodes.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, nodes)
>  >  >  >  List
>  >  >  >  >  Type
>  >  >  >  >  >  token(T_NAME, User)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Information to aid in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, pageInfo)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, PageInfo)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the total count of items in the connection.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, totalCount)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Int)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An edit on user content""")
>  >  >  Name
>  >  >  >  token(T_NAME, UserContentEdit)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was created.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, createdAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The actor who edited this content,""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, editor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, Actor)
>  >  >  Field
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, id)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, ID)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """Identifies the date and time when the object was last updated.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, updatedAt)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, DateTime)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  >  Directive
>  >  >  >  >  Name
>  >  >  >  >  >  token(T_NAME, deprecated)
>  >  >  >  >  Argument
>  >  >  >  >  >  Name
>  >  >  >  >  >  >  token(T_NAME, reason)
>  >  >  >  >  >  Value
>  >  >  >  >  >  >  token(T_STRING, "General type updated timestamps will eventually be replaced by other field specific timestamps.")
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An edge in a connection.""")
>  >  >  Name
>  >  >  >  token(T_NAME, UserContentEditEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A cursor for use in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, cursor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The item at the end of the edge.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, node)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, UserContentEdit)
>  >  ObjectDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """An edge in a connection.""")
>  >  >  Name
>  >  >  >  token(T_NAME, UserEdge)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """A cursor for use in pagination.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, cursor)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, String)
>  >  >  >  >  token(T_NON_NULL, !)
>  >  >  Field
>  >  >  >  Description
>  >  >  >  >  token(T_MULTILINE_STRING, """The item at the end of the edge.""")
>  >  >  >  Name
>  >  >  >  >  token(T_NAME, node)
>  >  >  >  Type
>  >  >  >  >  token(T_NAME, User)
>  >  ScalarDefinition
>  >  >  Description
>  >  >  >  token(T_MULTILINE_STRING, """A valid x509 certificate string""")
>  >  >  Name
>  >  >  >  token(T_NAME, X509Certificate)
